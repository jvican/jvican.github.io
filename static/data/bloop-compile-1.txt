Compiling 1 Scala source to /data/rw/code/scala/loop/.bloop/frontend/scala-2.12/classes ...
 [E-1]   xsbt-analyzer               : 1 spans, ()2.126ms (0.0%)
 [E-1]   scalacenter-profiling       : 1 spans, ()835.748ms (3.0%)
 [E-1]   jvm                         : 1 spans, ()334.382ms (1.2%)
 [E-1]   delambdafy                  : 1 spans, ()19.576ms (0.1%)
 [E-1]   cleanup                     : 1 spans, ()22.108ms (0.1%)
 [E-1]   mixin                       : 1 spans, ()26.543ms (0.1%)
 [E-1]   flatten                     : 1 spans, ()22.385ms (0.1%)
 [E-1]   constructors                : 1 spans, ()15.834ms (0.1%)
 [E-1]   lambdalift                  : 1 spans, ()58.145ms (0.2%)
 [E-1]   posterasure                 : 1 spans, ()43.625ms (0.2%)
 [E-1]   erasure                     : 1 spans, ()275.418ms (1.0%)
 [E-1]   explicitouter               : 1 spans, ()38.187ms (0.1%)
 [E-1]   specialize                  : 1 spans, ()103.544ms (0.4%)
 [E-1]   tailcalls                   : 1 spans, ()18.687ms (0.1%)
 [E-1]   fields                      : 1 spans, ()353.452ms (1.3%)
 [E-1]   uncurry                     : 1 spans, ()342.548ms (1.2%)
 [E-1]   refchecks                   : 1 spans, ()566.615ms (2.0%)
 [E-1]   xsbt-dependency             : 1 spans, ()62.041ms (0.2%)
 [E-1]   xsbt-api                    : 1 spans, ()71.494ms (0.3%)
 [E-1]   pickler                     : 1 spans, ()0.934ms (0.0%)
 [E-1]   extmethods                  : 1 spans, ()0.76ms (0.0%)
 [E-1]   superaccessors              : 1 spans, ()14.789ms (0.1%)
 [E-1]   patmat                      : 1 spans, ()597.297ms (2.1%)
 [E-1]   typer                       : 1 spans, ()24020.077ms (86.2%)
 [E-1]   packageobjects              : 1 spans, ()0.017ms (0.0%)
 [E-1]   namer                       : 1 spans, ()17.589ms (0.1%)
 [E-1]   parser                      : 1 spans, ()4.394ms (0.0%)
 [E-1] #total compile time           : 1 spans, ()27872.064ms
 [E-1] *** Cumulative timers for phases
 [E-1] Implicit searches by type:
       Map(
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.CliOptions,M]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[String]],G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.CommonOptions,N]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"workingDirectory\")) :: (Symbol @@ String(\"out\")) :: (Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,R]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[java.io.PrintStream] :: Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,Out0]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,HD]]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.CliOptions,K]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Autocomplete,L]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.Generic.Aux[bloop.cli.CommonOptions,Repr]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.CliOptions,V]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"err\")]]" -> 1,
         "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.CliOptions,V]" -> 1,
         "caseapp.core.HListParser[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"threads\")) :: shapeless.HNil,Int :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.CommonOptions,K]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.CommonOptions,D]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Bsp,K]" -> 1,
         "shapeless.Default.Aux[bloop.cli.CommonOptions,Options]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Bsp,H]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"ngerr\")]]" -> 1,
         "caseapp.core.HListParser.Aux[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,PT]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.CliOptions,R]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.CommonOptions,V]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.CommonOptions,L]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[shapeless.HNil,shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,Out0]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.About,N]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]{type P = PT}" -> 1,
         "caseapp.core.HListParser[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.CliOptions,H]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Default.Aux[bloop.cli.CliOptions,Options]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CommonOptions] :: shapeless.HNil,bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.CliOptions,N]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil,G]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,PT]]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")]]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.CommonOptions,V]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.CommonOptions,R]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"threads\")]]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"in\")]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Help,H]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.CliOptions,L]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[Boolean]],G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Test,N]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.ReporterKind]],G]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Autocomplete,H]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"configDir\")) :: (Symbol @@ String(\"version\")) :: (Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,R]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Autocomplete,N]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: shapeless.HNil,Int :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[Int]],G]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.CommonOptions,M]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Option[java.nio.file.Path]] :: Some[Boolean] :: Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"common\")) :: shapeless.HNil,bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[Option[java.nio.file.Path]],G]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.CliOptions,Repr]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.CommonOptions,H]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Strict[caseapp.core.Parser.Aux[bloop.cli.CommonOptions,HD]]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[Option[java.nio.file.Path]]],G]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,HD]]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"project\")]]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Clean,Repr]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"env\")]]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"version\")]]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"configDir\")]]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"ngout\")]]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Console,D]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"version\")) :: (Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"out\")]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"excludeRoot\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Compile,Options]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Configure,V]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[java.nio.file.Path]]],G]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Test,K]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[shapeless.HNil,shapeless.HNil,Out0]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,P]]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"out\")) :: (Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"verbose\")]]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Configure,D]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[List[String]]],G]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"reporter\")]]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.About,L]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.ReporterKind],G]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"only\")]]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[List[String]]],G]" -> 1,
         "caseapp.core.Parser[bloop.cli.CommonOptions]{type D = HD}" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[Option[String]],G]" -> 1,
         "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(\"About\")) :: (Symbol @@ String(\"Autocomplete\")) :: (Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.About :+: bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil,R]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Bsp,Options]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete,Repr]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil,G]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.completion.Mode,L]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.CliOptions,D]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Run,D]" -> 1,
         "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: (Symbol @@ String(\"mode\")) :: (Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,R]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = HD}" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Clean,R]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Compile,Repr]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")]]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Run,R]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "caseapp.util.AnnotationOption[caseapp.AppVersion,caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Help,D]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[List[String]] :: shapeless.HNil,G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Clean,N]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Test,M]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Test,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.About,Repr]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[String]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Bsp,N]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Compile,K]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Console,K]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Compile,D]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil,G]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Compile,R]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Help,K]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"mode\")) :: (Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"host\")]]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Clean,V]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"dotGraph\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Test,H]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "caseapp.core.Parser[bloop.cli.CliOptions]{type D = HD}" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Projects,Repr]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Strict[caseapp.core.Parser.Aux[bloop.cli.CliOptions,HD]]" -> 1,
         "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Test,Options]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Help,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.About,K]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.RawCommand,V]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Format]],G]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[Option[String]] :: shapeless.HNil,G]" -> 1,
         "shapeless.Strict[caseapp.core.CommandParser[this.Out]]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil,G]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Clean,D]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.About,Options]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"command\")]]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"main\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"watch\")]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"protocol\"),bloop.cli.BspProtocol] :: shapeless.labelled.FieldType[Symbol @@ String(\"host\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"port\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"socket\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"pipeName\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "caseapp.core.HListParser.Aux[bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.ReporterKind,L]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[List[String]],G]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[shapeless.CNil,K]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Run,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Configure,Repr]" -> 1,
         "caseapp.core.CommandParser[shapeless.CNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"incremental\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"socket\")]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Bsp,V]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Autocomplete,M]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.completion.Mode]],G]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Generic.Aux[List[String],L]" -> 1,
         "shapeless.Default.AsOptions.Aux[caseapp.core.DefaultBaseCommand,D]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Configure,Options]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"dotGraph\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "caseapp.core.CommandsMessages[shapeless.CNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"main\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Configure,H]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"protocol\")]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Compile,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = HD}" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Autocomplete,R]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"threads\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Int :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[caseapp.core.DefaultBaseCommand,K]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Run,M]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Run,Repr]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,caseapp.core.DefaultBaseCommand,V]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"isolated\")]]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Strict[caseapp.core.CommandsMessages[this.Out]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Bsp,R]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Configure,V]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Projects,K]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"incremental\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[Option[String]]],G]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Help,Options]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.About,V]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Clean,L]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[String]]],G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,caseapp.core.DefaultBaseCommand,N]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.About,V]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Console,L]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Bsp,L]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Clean,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Help,V]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Clean,M]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"incremental\")]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Projects,R]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.completion.Format]],G]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]{type P = P}" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.RawCommand]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")]]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"args\")]]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Clean,Options]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Console,V]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"only\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,caseapp.core.DefaultBaseCommand,M]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.completion.Format,L]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Run,K]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Compile,V]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.BspProtocol]],G]" -> 1,
         "shapeless.Typeable[caseapp.core.DefaultBaseCommand]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Autocomplete,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.About,M]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Console,R]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Run,N]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"main\")]]" -> 1,
         "shapeless.ops.coproduct.Inject[C,Some[caseapp.core.Default[Int]]]" -> 1,
         "caseapp.core.HListParser[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Help,Repr]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Test,Repr]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Run,L]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Option[String]] :: Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[None.type :: shapeless.HNil,Option[String] :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Boolean] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Int :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.LabelledGeneric.Aux[shapeless.CNil,C]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Help,M]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Bsp,M]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,caseapp.core.DefaultBaseCommand,R]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"port\")]]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Help,R]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.RawCommand,K]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "caseapp.util.AnnotationOption[caseapp.AppName,caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Console,V]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: shapeless.HNil,Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Projects,V]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"mode\")]]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Bsp,D]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"incremental\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"protocol\")) :: (Symbol @@ String(\"host\")) :: (Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Help,L]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil,G]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.About,D]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Configure,R]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Clean,K]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Test,D]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.BspProtocol,L]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Compile,N]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Test,L]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.ReporterKind]],G]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ProgName,caseapp.core.DefaultBaseCommand]" -> 1,
         "this.Out <:< (bloop.cli.Commands.About :+: bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil)" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Test,R]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Option[String]] :: Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.ops.coproduct.Inject[C,Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Run,Options]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.Parser[caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Projects,V]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.RawCommand,C]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.DefaultBaseCommand,V]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Bsp,V]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Projects,D]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Mode],G]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"main\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Projects,M]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Annotation[caseapp.ProgName,caseapp.core.DefaultBaseCommand]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.RawCommand]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.Aux[caseapp.core.DefaultBaseCommand,Options]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Configure,M]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Console,N]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.BspProtocol] :: Some[String] :: Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Configure,K]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.About,R]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"format\")]]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Console,M]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Console,H]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Autocomplete,K]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Test,V]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.labelled.FieldType[Symbol @@ String(\"mode\"),bloop.cli.completion.Mode] :: shapeless.labelled.FieldType[Symbol @@ String(\"format\"),bloop.cli.completion.Format] :: shapeless.labelled.FieldType[Symbol @@ String(\"command\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"project\"),Option[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,P]]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Autocomplete,Options]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Help,N]" -> 1,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"pipeName\")]]" -> 1,
         "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Annotation[caseapp.AppVersion,caseapp.core.DefaultBaseCommand]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.About,H]" -> 1,
         "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Mode]],G]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.Messages[caseapp.core.DefaultBaseCommand]" -> 1,
         "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.ops.coproduct.Inject[C,Some[caseapp.core.Default[String]]]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Configure,L]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Run,H]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Projects,H]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil,G]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Projects,Options]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Compile,L]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.LabelledGeneric.Aux[caseapp.core.DefaultBaseCommand,L]" -> 1,
         "shapeless.ops.coproduct.Inject[C,Some[caseapp.core.Default[Boolean]]]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Compile,H]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Run,V]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.DefaultBaseCommand,Repr]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.BspProtocol],G]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Configure,N]" -> 1,
         "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Compile,M]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Projects,L]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Clean,H]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Bsp,Repr]" -> 1,
         "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Format],G]" -> 1,
         "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.BspProtocol]],G]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.ops.coproduct.Inject[C,None.type]" -> 1,
         "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[bloop.cli.BspProtocol with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"protocol\")],bloop.cli.BspProtocol] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
         "caseapp.core.CommandParser[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Projects,N]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Boolean] :: Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
         "caseapp.core.HListParser[bloop.cli.BspProtocol with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"protocol\")],bloop.cli.BspProtocol] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
         "caseapp.core.HListParser[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.Default.Aux[bloop.cli.Commands.Console,Options]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,shapeless.CNil]" -> 1,
         "shapeless.Generic.Aux[bloop.cli.Commands.Console,Repr]" -> 1,
         "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,P]]" -> 1,
         "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"host\")) :: (Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
         "shapeless.ops.coproduct.Inject[C,Some[caseapp.core.Default[java.io.InputStream]]]" -> 1,
         "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotation[caseapp.AppName,caseapp.core.DefaultBaseCommand]" -> 1,
         "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
         "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
         "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Autocomplete,D]" -> 1,
         "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "caseapp.core.CommandsMessages[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
         "shapeless.Annotations.Aux[caseapp.Hidden,caseapp.core.DefaultBaseCommand,H]" -> 1,
         "caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil" -> 2,
         "caseapp.core.Default[bloop.cli.BspProtocol]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"dotGraph\")]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"format\")]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Compile]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.completion.Format]]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"dotGraph\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil" -> 2,
         "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.completion.Mode]]]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Autocomplete]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Projects]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Projects]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"protocol\")]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Autocomplete\")]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Configure]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.About]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Compile\")]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"host\")]" -> 2,
         "caseapp.core.ArgParser[List[String]]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Console]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Help]]" -> 2,
         "caseapp.core.Default[bloop.cli.completion.Format]" -> 2,
         "Option[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Test]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Configure\")]]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Run]" -> 2,
         "caseapp.core.Default[bloop.cli.completion.Mode]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Run]]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Run\")]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Clean\")]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Autocomplete]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Bsp\")]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"excludeRoot\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Configure]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Test\")]" -> 2,
         "caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Help]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Test]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Run\")]]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Clean]" -> 2,
         "Option[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Console]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"About\")]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Bsp]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"command\")]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Compile\")]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Bsp\")]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Help\")]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Help\")]]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Int :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Autocomplete\")) :: (Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.completion.Format]]]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Projects\")]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"pipeName\")]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Projects]]" -> 2,
         "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.BspProtocol]]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Configure\")]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Clean\")]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.labelled.FieldType[Symbol @@ String(\"mode\"),bloop.cli.completion.Mode] :: shapeless.labelled.FieldType[Symbol @@ String(\"format\"),bloop.cli.completion.Format] :: shapeless.labelled.FieldType[Symbol @@ String(\"command\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"project\"),Option[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil)" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Console]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.About]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Console\")]]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"only\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"Console\")]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Projects]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Configure]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"incremental\")]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Bsp]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Help]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Clean]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Autocomplete]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"socket\")]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil" -> 2,
         "caseapp.core.ArgParser[bloop.cli.BspProtocol]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Autocomplete]" -> 2,
         "caseapp.core.ArgParser[bloop.cli.ReporterKind]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"incremental\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Test\")]]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Compile]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Configure]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"port\")]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.About]]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"protocol\"),bloop.cli.BspProtocol] :: shapeless.labelled.FieldType[Symbol @@ String(\"host\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"port\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"socket\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"pipeName\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Compile]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Bsp]" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil]" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Format]]]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Clean]]" -> 2,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Test]]" -> 2,
         "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Run]" -> 2,
         "caseapp.core.ArgParser[bloop.cli.completion.Mode]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Compile]]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Projects\")]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Run]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"main\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "caseapp.core.ArgParser[bloop.cli.completion.Format]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"excludeRoot\")]" -> 2,
         "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Console]]" -> 2,
         "Some[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.BspProtocol]]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"main\")]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.About]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"About\")]]" -> 2,
         "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")]]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Clean]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Test]" -> 2,
         "caseapp.core.Parser[bloop.cli.Commands.Bsp]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
         "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.BspProtocol]]" -> 2,
         "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.completion.Mode]]" -> 2,
         "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Help]" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil]" -> 2,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Mode]]]" -> 2,
         "caseapp.core.ArgParser[Option[String]]" -> 2,
         "Option[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"only\")]" -> 2,
         "shapeless.Witness.Aux[Symbol @@ String(\"mode\")]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
         "shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.CliOptions :: shapeless.HNil)" -> 4,
         "caseapp.core.ArgParser[String]" -> 4,
         "shapeless.Witness.Aux[Symbol @@ String(\"args\")]" -> 4,
         "shapeless.Witness.Aux[Symbol @@ String(\"isolated\")]" -> 4,
         "caseapp.core.ArgParser[java.nio.file.Path]" -> 5,
         "caseapp.core.ArgParser[Option[java.nio.file.Path]]" -> 5,
         "shapeless.Witness.Aux[Symbol @@ String(\"watch\")]" -> 6,
         "caseapp.util.Implicit[Option[caseapp.core.Default[Option[String]]]]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Option[String]]]]" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[List[String]]]" -> 8,
         "Some[caseapp.core.Default[List[String]]]" -> 8,
         "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.ReporterKind]]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.ReporterKind]]]" -> 8,
         "caseapp.core.Default[List[String]] :: shapeless.HNil" -> 8,
         "Option[caseapp.core.Default[Option[String]]]" -> 8,
         "Some[caseapp.core.Default[Option[String]]]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil]" -> 8,
         "caseapp.core.Default[Option[String]] :: shapeless.HNil" -> 8,
         "Option[caseapp.core.Default[List[String]]]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[List[String]]]]" -> 8,
         "Option[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
         "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.ReporterKind]]]" -> 8,
         "Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil" -> 8,
         "shapeless.Strict[caseapp.core.ArgParser[List[String]]]" -> 8,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Option[String]]] :+: None.type :+: shapeless.CNil]" -> 8,
         "Some[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
         "caseapp.core.Default[Option[String]]" -> 8,
         "shapeless.Witness.Aux[Symbol @@ String(\"reporter\")]" -> 8,
         "shapeless.Strict[caseapp.core.ArgParser[Option[String]]]" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[Option[String]] :: shapeless.HNil]" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
         "Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil" -> 8,
         "caseapp.core.Default[bloop.cli.ReporterKind]" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[List[String]] :: shapeless.HNil]" -> 8,
         "caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil" -> 8,
         "caseapp.util.Implicit[Option[caseapp.core.Default[List[String]]]]" -> 8,
         "caseapp.core.Default[List[String]]" -> 8,
         "Some[caseapp.core.Default[Option[String]]] :+: None.type :+: shapeless.CNil" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil]" -> 8,
         "caseapp.util.Implicit[caseapp.core.Default[Option[String]]]" -> 8,
         "caseapp.core.ArgParser[bloop.cli.CommonOptions.PrettyProperties]" -> 11,
         "caseapp.core.ArgParser[java.io.PrintStream]" -> 11,
         "caseapp.core.ArgParser[java.io.InputStream]" -> 11,
         "shapeless.Witness.Aux[Symbol @@ String(\"project\")]" -> 12,
         "shapeless.Witness.Aux[Symbol @@ String(\"cliOptions\")]" -> 22,
         "caseapp.util.Implicit[None.type :+: shapeless.CNil]" -> 22,
         "caseapp.core.Parser[bloop.cli.CliOptions]" -> 23,
         "shapeless.Witness.Aux[Symbol @@ String(\"configDir\")]" -> 45,
         "shapeless.Witness.Aux[Symbol @@ String(\"common\")]" -> 45,
         "shapeless.Witness.Aux[Symbol @@ String(\"version\")]" -> 45,
         "shapeless.Witness.Aux[Symbol @@ String(\"verbose\")]" -> 45,
         "shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil)" -> 45,
         "caseapp.core.Parser[bloop.cli.CommonOptions]" -> 46,
         "Some[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 47,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Option[java.nio.file.Path]]]]" -> 47,
         "Option[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 47,
         "Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil" -> 47,
         "caseapp.util.Implicit[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 47,
         "shapeless.Strict[caseapp.core.ArgParser[Option[java.nio.file.Path]]]" -> 47,
         "caseapp.core.Default[Option[java.nio.file.Path]]" -> 47,
         "caseapp.util.Implicit[Option[caseapp.core.Default[Option[java.nio.file.Path]]]]" -> 47,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil]" -> 47,
         "caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil" -> 47,
         "caseapp.util.Implicit[caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil]" -> 47,
         "caseapp.util.Implicit[shapeless.HNil]" -> 55,
         "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.CommonOptions.PrettyProperties]]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"in\")]" -> 91,
         "shapeless.Strict[caseapp.core.ArgParser[java.io.InputStream]]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"workingDirectory\")]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"out\")]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"err\")]" -> 91,
         "shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil)" -> 91,
         "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"ngout\")]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"ngerr\")]" -> 91,
         "caseapp.util.Implicit[Option[caseapp.core.Default[java.io.InputStream]]]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"env\")]" -> 91,
         "shapeless.Witness.Aux[Symbol @@ String(\"threads\")]" -> 93,
         "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]" -> 94,
         "Option[caseapp.core.Default[Int]]" -> 95,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Int]] :+: None.type :+: shapeless.CNil]" -> 95,
         "caseapp.util.Implicit[Option[caseapp.core.Default[Int]]]" -> 95,
         "shapeless.Strict[caseapp.core.ArgParser[Int]]" -> 95,
         "Option[caseapp.core.Default[String]]" -> 101,
         "shapeless.Strict[caseapp.core.ArgParser[String]]" -> 101,
         "caseapp.util.Implicit[Option[caseapp.core.Default[String]]]" -> 101,
         "caseapp.util.Implicit[Some[caseapp.core.Default[String]] :+: None.type :+: shapeless.CNil]" -> 101,
         "caseapp.util.Implicit[Option[caseapp.core.Default[Boolean]]]" -> 106,
         "caseapp.util.Implicit[Some[caseapp.core.Default[Boolean]] :+: None.type :+: shapeless.CNil]" -> 106,
         "Option[caseapp.core.Default[Boolean]]" -> 106,
         "shapeless.Strict[caseapp.core.ArgParser[Boolean]]" -> 106,
         "shapeless.Strict[caseapp.core.ArgParser[java.io.PrintStream]]" -> 364,
         "caseapp.util.Implicit[Option[caseapp.core.Default[java.io.PrintStream]]]" -> 364
       )
 [E-1] Implicit searches by position:
       Map(
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-121,offset=5963 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-112,offset=5472 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-84,offset=3809 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-103,offset=4951 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-128,offset=6411 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-22,offset=707 -> 1,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-164,offset=8010 -> 30,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-166,offset=8124 -> 101,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-168,offset=8224 -> 277,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-173,offset=8465 -> 6937,
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-171,offset=8348 -> 6959
       )
 [E-1] Macro repeated expansions:
       Map(
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Run\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"pipeName\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Run, Out]" -> 8,
         "shapeless.Annotations.materialize[caseapp.ValueDescription, bloop.cli.CliOptions, Out]" -> 45,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Run]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$RawCommand]" -> 4,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Projects\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"configDir\")]]" -> 90,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Help]" -> 8,
         "shapeless.Witness.apply[Symbol @@ String(\"common\")]" -> 45,
         "shapeless.Witness.apply[Symbol @@ String(\"cliOptions\")]" -> 22,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Console, Out]" -> 2,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Projects, Out]" -> 8,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Console, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Compile\")]]" -> 4,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Bsp, L]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"threads\")]]" -> 186,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"only\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"incremental\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Projects, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"command\")]]" -> 4,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.CommonOptions, Out]" -> 91,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Help, L]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Console\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Test, Out]" -> 2,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Test, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"ngerr\")]]" -> 182,
         "shapeless.Default.materialize[bloop.cli.CommonOptions, L]" -> 91,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"args\")]]" -> 8,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.CommonOptions, Out]" -> 273,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Compile]" -> 4,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Configure, Out]" -> 2,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"format\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"excludeRoot\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Test\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"dotGraph\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Recurse, caseapp.core.DefaultBaseCommand, Out]" -> 4,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Help, Out]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"project\")]]" -> 24,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"watch\")]]" -> 12,
         "shapeless.Default.materialize[bloop.cli.CliOptions, L]" -> 45,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Projects, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"out\")]]" -> 182,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"workingDirectory\")]]" -> 182,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Help, Out]" -> 4,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.CliOptions, Out]" -> 45,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"main\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"host\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.CommonOptions, Out]" -> 91,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"socket\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Help\")]]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Clean]" -> 4,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Test, L]" -> 2,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Projects, Out]" -> 4,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Run, L]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"in\")]]" -> 182,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Bsp\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"port\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Compile, Out]" -> 10,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Console, L]" -> 2,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"About\")]]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.CommonOptions]" -> 182,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.CliOptions, Out]" -> 47,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"reporter\")]]" -> 16,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Run, Out]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[caseapp.core.DefaultBaseCommand]" -> 2,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Test with shapeless.labelled.labelled$KeyTag[Symbol with shapeless.tag.tag$Tagged[String(\"Test\")],bloop.cli.Commands.Commands$Test] :+: shapeless.CNil]" -> 44,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Projects, L]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"protocol\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.CliOptions, Out]" -> 49,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Console]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"env\")]]" -> 182,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.CliOptions, Out]" -> 45,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"ngout\")]]" -> 182,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Test, Out]" -> 4,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Clean, L]" -> 2,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Projects]" -> 4,
         "shapeless.Strict.mkStrict[I]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.CliOptions]" -> 90,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Test, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Configure\")]]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Autocomplete]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Test]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"verbose\")]]" -> 90,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Configure, L]" -> 2,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Run, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"mode\")]]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Clean\")]]" -> 4,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Clean, Out]" -> 4,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Bsp]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"isolated\")]]" -> 8,
         "shapeless.Annotation.materialize[caseapp.CommandName, bloop.cli.Commands.Commands$Bsp]" -> 2,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Compile, L]" -> 2,
         "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Configure]" -> 4,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"version\")]]" -> 90,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Autocomplete\")]]" -> 4,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Autocomplete, Out]" -> 2,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Bsp, Out]" -> 2,
         "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"err\")]]" -> 182,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Run, Out]" -> 2,
         "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Help, Out]" -> 12,
         "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Autocomplete, Out]" -> 2,
         "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Bsp, Out]" -> 2,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$Autocomplete, L]" -> 2,
         "shapeless.Default.materialize[bloop.cli.Commands.Commands$About, L]" -> 2,
         "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Configure, Out]" -> 2
       )
 [E-1] Macro data in total:
       MacroInfo(6035, 399968, 23401L)
 [E-1] Macro data per file:
       Map(CliParsers.scala -> MacroInfo(6035, 399968, 23401L))
 [E-1] Macro data per call-site:
       Map(
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-168,offset=8224 -> MacroInfo(113, 7781, 455L),
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-171,offset=8348 -> MacroInfo(2933, 194719, 11963L),
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-166,offset=8124 -> MacroInfo(43, 2455, 104L),
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-173,offset=8465 -> MacroInfo(2933, 194653, 10869L),
         source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-164,offset=8010 -> MacroInfo(13, 360, 8L)
       )
 [E-1] Writing graph to /data/rw/code/scala/loop/.bloop/frontend/scala-2.12/classes/META-INF/profiledb/graphs/implicit-searches-1526847932681.flamegraph
 [E-1] #typechecked identifiers      : 94140
 [E-1] #created scopes               : 2646319
 [E-1] #created tree nodes           : 2528157
 [E-1] #all lubs/glbs                : 73912
 [E-1] classfile writing             : 254 spans, ()13.533ms (4.0%)
 [E-1] intra-method optimizations    : 253 spans, ()38.388ms (11.5%)
 [E-1] code generation               : 1 spans, ()201.837ms (60.4%)
 [E-1] bcode initialization          : 1 spans, ()0.88ms (0.3%)
 [E-1] time in backend               : 1 spans, ()334.375ms
 [E-1] time spent in scope lookup    : 4418807 spans, ()334.749ms
 [E-1]   of which in implicit        : 503168 (85.0%)
 [E-1]   of which multiple overloaded: 4517 (0.8%)
 [E-1]   of which not found          : 163137 (27.5%)
 [E-1] #findMember ops               : 592302
 [E-1]   of which in implicit        : 977473 (52.2%)
 [E-1]   of which in failed          : 2756 (0.1%)
 [E-1] #subtype ops                  : 1872193
 [E-1] #unique types                 : 212205
 [E-1] #typechecked applications     : 80565
 [E-1]   of which for typerefs       : 59164 (75.9%)
 [E-1]   of which for compound types : 16642 (21.3%)
 [E-1] avg base type seq length      : 5.4
 [E-1] #base type seqs               : 77953
 [E-1] #class symbols                : 1415299
 [E-1] precise time in macroExpand   : 19051 spans, ()23619.172ms
 [E-1]   of which in implicits       : 3673126 (90.6%)
 [E-1] #raw type creations           : 4052826
 [E-1] #toplevel lubs/glbs           : 1
 [E-1] #sametype ops                 : 1724423
 [E-1] #symbols                      : 4271580
 [E-1] #typechecked selections       : 252253
 [E-1] #type symbols                 : 3960606
 [E-1] time spent in scope population: 1237814 spans, ()48.12ms
 [E-1] *** Cumulative statistics at phase jvm
 [E-1] #typechecked identifiers      : 93751
 [E-1] #created scopes               : 2645980
 [E-1] #created tree nodes           : 2523831
 [E-1] #all lubs/glbs                : 73912
 [E-1] time spent in scope lookup    : 4408726 spans, ()333.002ms
 [E-1]   of which in implicit        : 503168 (85.7%)
 [E-1]   of which multiple overloaded: 4410 (0.8%)
 [E-1]   of which not found          : 162802 (27.7%)
 [E-1] #findMember ops               : 587440
 [E-1]   of which in implicit        : 977473 (52.2%)
 [E-1]   of which in failed          : 2756 (0.1%)
 [E-1] #subtype ops                  : 1871402
 [E-1] #unique types                 : 211424
 [E-1] #typechecked applications     : 80176
 [E-1]   of which for typerefs       : 59072 (76.0%)
 [E-1]   of which for compound types : 16525 (21.3%)
 [E-1] avg base type seq length      : 5.4
 [E-1] #base type seqs               : 77744
 [E-1] #class symbols                : 1414741
 [E-1] precise time in macroExpand   : 19051 spans, ()23619.172ms
 [E-1]   of which in implicits       : 3673126 (90.7%)
 [E-1] #raw type creations           : 4047838
 [E-1] #toplevel lubs/glbs           : 1
 [E-1] #sametype ops                 : 1723528
 [E-1] #symbols                      : 4267869
 [E-1] #typechecked selections       : 252253
 [E-1] #type symbols                 : 3959870
 [E-1] time spent in scope population: 1237809 spans, ()48.111ms
 [E-1] *** Cumulative statistics at phase cleanup
 [E-1] #typechecked identifiers      : 93747
 [E-1] #created scopes               : 2645657
 [E-1] #created tree nodes           : 2488974
 [E-1] #all lubs/glbs                : 73912
 [E-1] time spent in scope lookup    : 4387879 spans, ()331.153ms
 [E-1]   of which in implicit        : 503168 (86.1%)
 [E-1]   of which multiple overloaded: 4410 (0.8%)
 [E-1]   of which not found          : 162780 (27.9%)
 [E-1] #findMember ops               : 584464
 [E-1]   of which in implicit        : 977473 (52.3%)
 [E-1]   of which in failed          : 2756 (0.1%)
 [E-1] #subtype ops                  : 1868251
 [E-1] #unique types                 : 210743
 [E-1] #typechecked applications     : 80171
 [E-1]   of which for typerefs       : 59039 (76.3%)
 [E-1]   of which for compound types : 16235 (21.0%)
 [E-1] avg base type seq length      : 5.4
 [E-1] #base type seqs               : 77421
 [E-1] #class symbols                : 1414734
 [E-1] precise time in macroExpand   : 19051 spans, ()23619.172ms
 [E-1]   of which in implicits       : 3673126 (91.3%)
 [E-1] #raw type creations           : 4022480
 [E-1] #toplevel lubs/glbs           : 1
 [E-1] #sametype ops                 : 1723523
 [E-1] #symbols                      : 4262615
 [E-1] #typechecked selections       : 252191
 [E-1] #type symbols                 : 3959816
 [E-1] time spent in scope population: 1237799 spans, ()48.111ms
 [E-1] *** Cumulative statistics at phase erasure
 [E-1]   of which in unreachability  : 351 spans, ()218.155ms (42.5%)
 [E-1]   of which in exhaustivity    : 346 spans, ()115.779ms (22.6%)
 [E-1]   of which variable equality  : 1048 spans, ()51.2ms (10.0%)
 [E-1]   of which in CNF conversion  : 0 spans, ()0.0ms (0.0%)
 [E-1]   of which DPLL               : 368 spans, ()3.189ms (0.6%)
 [E-1] time spent in patmat          : 351 spans, ()513.271ms
 [E-1] #typechecked identifiers      : 79344
 [E-1] #created scopes               : 2586042
 [E-1] #created tree nodes           : 2352715
 [E-1] #all lubs/glbs                : 73424
 [E-1] time spent in scope lookup    : 4299495 spans, ()324.096ms
 [E-1]   of which in implicit        : 503168 (98.9%)
 [E-1]   of which multiple overloaded: 1970 (0.4%)
 [E-1]   of which not found          : 96258 (18.9%)
 [E-1] #findMember ops               : 508522
 [E-1]   of which in implicit        : 977473 (86.3%)
 [E-1]   of which in failed          : 2756 (0.2%)
 [E-1] #subtype ops                  : 1132908
 [E-1] #unique types                 : 156719
 [E-1] #typechecked applications     : 50670
 [E-1]   of which for typerefs       : 57556 (78.1%)
 [E-1]   of which for compound types : 13984 (19.0%)
 [E-1] avg base type seq length      : 5.4
 [E-1] #base type seqs               : 73687
 [E-1] #class symbols                : 1384549
 [E-1] precise time in macroExpand   : 19051 spans, ()23619.172ms
 [E-1]   of which in implicits       : 3673126 (98.0%)
 [E-1] #raw type creations           : 3749224
 [E-1] #toplevel lubs/glbs           : 1
 [E-1] #sametype ops                 : 1706226
 [E-1] #symbols                      : 4160840
 [E-1] #typechecked selections       : 209162
 [E-1] #type symbols                 : 3902911
 [E-1] time spent in scope population: 1209846 spans, ()45.705ms
 [E-1] *** Cumulative statistics at phase patmat
 [E-1]   from macros                 : 14142 (98.8%)
 [E-1]   #implicit oftype hits       : 10286 (71.9%)
 [E-1]   #implicit inscope hits      : 1587 (11.1%)
 [E-1]   #implicit improves cached   : 1376 (9.6%)
 [E-1]   #implicit improves tests    : 1489 (10.4%)
 [E-1]   #found                      : 12250 (85.6%)
 [E-1]   #typed                      : 14101 (98.5%)
 [E-1]   #matching                   : 14101 (98.5%)
 [E-1]   #plausibly compatible       : 14101 (98.5%)
 [E-1] #implicit searches            : 14310
 [E-1] #typechecked identifiers      : 77482
 [E-1] #created scopes               : 2582082
 [E-1] #created tree nodes           : 2254730
 [E-1] #all lubs/glbs                : 73424
 [E-1]   of which delayed macros     : 6350 (33.3%)
 [E-1]   of which failed macros      : 632 (3.3%)
 [E-1] #macro expansions             : 19051
 [E-1] implicit cache hits           : 2774 (21.8%)
 [E-1] implicit cache accesses       : 12723
 [E-1] time spent in scope lookup    : 4295394 spans, ()323.207ms
 [E-1]   of which in implicit        : 503168 (99.1%)
 [E-1]   of which multiple overloaded: 1970 (0.4%)
 [E-1]   of which not found          : 96254 (18.9%)
 [E-1] #findMember ops               : 507944
 [E-1]   of which in implicit        : 977473 (99.8%)
 [E-1]   of which in failed          : 2756 (0.3%)
 [E-1] #subtype ops                  : 979146
 [E-1] #unique types                 : 153853
 [E-1] #typechecked applications     : 47341
 [E-1]   of which for typerefs       : 57382 (78.1%)
 [E-1]   of which for compound types : 13979 (19.0%)
 [E-1] avg base type seq length      : 5.4
 [E-1] #base type seqs               : 73508
 [E-1] #class symbols                : 1384547
 [E-1] precise time in macroExpand   : 19051 spans, ()23619.172ms
 [E-1]   of which in implicits       : 3673126 (99.8%)
 [E-1] #raw type creations           : 3678689
 [E-1] #toplevel lubs/glbs           : 1
 [E-1] #sametype ops                 : 1683796
 [E-1] #symbols                      : 4157710
 [E-1] #typechecked selections       : 146128
 [E-1] #type symbols                 : 3902906
 [E-1] time spent in scope population: 1205895 spans, ()45.158ms
 [E-1] time spent in macroExpand     : 19051 spans, ()23618.751ms (98.3%)
 [E-1]   matchesPT                   : 121202 spans, ()491.762ms (2.0%)
 [E-1]   assembling parts            : 9949 spans, ()501.164ms (2.1%)
 [E-1]   failed of type              : 2437 spans, ()13936.634ms (58.0%)
 [E-1]   successful of type          : 10286 spans, ()23913.134ms (99.6%)
 [E-1]   failed in scope             : 12723 spans, ()2968.732ms (12.4%)
 [E-1]   successful in scope         : 1587 spans, ()264.649ms (1.1%)
 [E-1] time spent in implicits       : 14310 spans, ()23941.897ms (99.7%)
 [E-1] time spent ref scanning       : 0 spans, ()0.0ms (0.0%)
 [E-1]   failed op=                  : 0 spans, ()0.0ms (0.0%)
 [E-1]   failed apply                : 0 spans, ()0.0ms (0.0%)
 [E-1] time spent in failed          : 689 spans, ()253.314ms (1.1%)
 [E-1] time classfilereading         : 293 spans, ()62.275ms (0.3%)
 [E-1] time spent in baseClasses     : 5231 spans, ()20.603ms (0.1%) aggregate, 16.535ms (0.1%) specific
 [E-1] time spent in baseTypeSeq     : 71361 spans, ()296.827ms (1.2%) aggregate, 158.08ms (0.7%) specific
 [E-1] time spent in asSeenFrom      : 1729147 spans, ()1733.288ms (7.2%) aggregate, 1710.085ms (7.1%) specific
 [E-1] time spent in findmembers     : 0 spans, ()0.0ms (0.0%) aggregate, 0.0ms (0.0%) specific
 [E-1] time spent in findmember      : 507944 spans, ()371.442ms (1.5%) aggregate, 369.166ms (1.5%) specific
 [E-1] time spent in <:<             : 979146 spans, ()2131.86ms (8.9%) aggregate, 1227.755ms (5.1%) specific
 [E-1] time spent in lubs            : 1 spans, ()0.598ms (0.0%) aggregate, 0.361ms (0.0%) specific
 [E-1] time spent typechecking       : 1 spans, ()24020.073ms
 [E-1] *** Cumulative statistics at phase typer
 [E-1] #created tree nodes           : 1285
 [E-1] *** Cumulative statistics at phase parser
Done compiling.
