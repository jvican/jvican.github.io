jvican in /data/rw/code/scala/loop                                [14:00:56] 
> $ bloop compile frontend -w --reporter scalac                    [Â±master]
Compiling 44 Scala sources to /data/rw/code/scala/loop/.bloop/frontend/scala-2.12/classes ...
Enabling statistics, measuring overhead = 22.303ns to 52.5064ns per timer
*** Cumulative statistics at phase typer
time spent typechecking       : 1 spans, ()43146.191ms
time spent in lubs            : 67 spans, ()56.313ms (0.1%) aggregate, 15.453ms (0.0%) specific
time spent in <:<             : 1548605 spans, ()1921.743ms (4.5%) aggregate, 1697.769ms (3.9%) specific
time spent in findmember      : 873219 spans, ()662.023ms (1.5%) aggregate, 619.148ms (1.4%) specific
time spent in findmembers     : 0 spans, ()0.0ms (0.0%) aggregate, 0.0ms (0.0%) specific
time spent in asSeenFrom      : 2544924 spans, ()1367.201ms (3.2%) aggregate, 1306.089ms (3.0%) specific
time spent in baseTypeSeq     : 110504 spans, ()474.955ms (1.1%) aggregate, 272.463ms (0.6%) specific
time spent in baseClasses     : 9293 spans, ()40.42ms (0.1%) aggregate, 31.452ms (0.1%) specific
time classfilereading         : 772 spans, ()125.114ms (0.3%)
time spent in failed          : 6155 spans, ()660.844ms (1.5%)
  failed apply                : 1 spans, ()0.148ms (0.0%)
  failed op=                  : 0 spans, ()0.0ms (0.0%)
time spent ref scanning       : 0 spans, ()0.0ms (0.0%)
time spent in implicits       : 33609 spans, ()42453.842ms (98.4%)
  successful in scope         : 346 spans, ()83.942ms (0.2%)
  failed in scope             : 33263 spans, ()3278.664ms (7.6%)
  successful of type          : 18286 spans, ()42339.72ms (98.1%)
  failed of type              : 14977 spans, ()29140.906ms (67.5%)
  assembling parts            : 18647 spans, ()415.094ms (1.0%)
  matchesPT                   : 136322 spans, ()567.596ms (1.3%)
time spent in macroExpand     : 44445 spans, ()41976.691ms (97.3%)
time spent in scope population: 1727118 spans, ()86.381ms
#type symbols                 : 5328657
#typechecked selections       : 225023
#symbols                      : 5830470
#sametype ops                 : 1982744
#toplevel lubs/glbs           : 67
#raw type creations           : 5567658
  of which in failed          : 11 (0.0%)
  of which in implicits       : 5451427 (97.9%)
precise time in macroExpand   : 44445 spans, ()41977.746ms
#class symbols                : 1843391
#base type seqs               : 112953
avg base type seq length      : 5.7
  of which for compound types : 26533 (23.5%)
  of which for typerefs       : 83971 (74.3%)
  of which for singletons     : 22 (0.0%)
#typechecked applications     : 82421
#unique types                 : 402577
#subtype ops                  : 1548605
  of which in failed          : 24588 (1.6%)
  of which in implicit        : 1500768 (96.9%)
#findMember ops               : 873219
  of which not found          : 166570 (19.1%)
  of which multiple overloaded: 2911 (0.3%)
  of which in failed          : 11 (0.0%)
  of which in implicit        : 808876 (92.6%)
time spent in scope lookup    : 4329572 spans, ()432.729ms
implicit cache accesses       : 33218
implicit cache hits           : 14571 (43.9%)
#macro expansions             : 44445
  of which failed macros      : 10990 (24.7%)
  of which delayed macros     : 14797 (33.3%)
#all lubs/glbs                : 129333
#created tree nodes           : 3800743
#created scopes               : 3553229
#typechecked identifiers      : 134730
#implicit searches            : 33609
  #plausibly compatible       : 39023 (116.1%)
  #matching                   : 39023 (116.1%)
  #typed                      : 38989 (116.0%)
  #found                      : 19560 (58.2%)
  #implicit improves tests    : 8395 (25.0%)
  #implicit improves cached   : 6311 (18.8%)
  #implicit inscope hits      : 346 (1.0%)
  #implicit oftype hits       : 18286 (54.4%)
  from macros                 : 32976 (98.1%)
Writing graph to /data/rw/code/scala/loop/.bloop/frontend/scala-2.12/classes/META-INF/profiledb/graphs/implicit-searches-1526990505759.flamegraph
Macro data per call-site:
Map(
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2300 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-102,offset=3847 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-310,offset=13491 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4246 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/JavaEnv.scala,line-23,offset=690 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/ExitStatus.scala,line-33,offset=1095 -> MacroInfo(7, 28, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=968 -> MacroInfo(1, 11, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-155,offset=5935 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-282,offset=12140 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4062 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-45,offset=1732 -> MacroInfo(4378, 302386, 19849L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-38,offset=1386 -> MacroInfo(13, 361, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2278 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3347 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-314,offset=12707 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-220,offset=9547 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-41,offset=1186 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-155,offset=5920 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-22,offset=551 -> MacroInfo(
    357,
    26423,
    8L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-38,offset=1260 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-58,offset=2129 -> MacroInfo(
    2,
    12,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-45,offset=1716 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=807 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-402,offset=17310 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-40,offset=1491 -> MacroInfo(178, 13199, 928L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-424,offset=18475 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=792 -> MacroInfo(1, 11, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-156,offset=5977 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-114,offset=4176 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=816 -> MacroInfo(1, 11, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4267 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-201,offset=7470 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-219,offset=8340 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-85,offset=2817 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-23,offset=571 -> MacroInfo(1, 11, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-43,offset=1615 -> MacroInfo(4378, 302452, 19015L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-215,offset=9153 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-109,offset=4010 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-37,offset=1242 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-201,offset=8211 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-72,offset=2367 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4083 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-37,offset=1221 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-121,offset=4751 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=974 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/ProjectUris.scala,line-15,offset=397 -> MacroInfo(1, 11, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-115,offset=4212 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-290,offset=12492 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3368 -> MacroInfo(
    1,
    6,
    0L
  ),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-107,offset=3930 -> MacroInfo(1, 6, 0L),
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-216,offset=8701 -> MacroInfo(
    1,
    6,
    0L
  )
)
Macro data per file:
Map(
  Tasks.scala -> MacroInfo(7, 42, 2L),
  Project.scala -> MacroInfo(10, 60, 4L),
  Bloop.scala -> MacroInfo(358, 26429, 8L),
  Forker.scala -> MacroInfo(8, 48, 2L),
  ProjectUris.scala -> MacroInfo(1, 11, 0L),
  TestServer.scala -> MacroInfo(2, 12, 0L),
  TestInternals.scala -> MacroInfo(5, 30, 1L),
  CliParsers.scala -> MacroInfo(8947, 618398, 39794L),
  Interpreter.scala -> MacroInfo(1, 6, 0L),
  FileTracker.scala -> MacroInfo(1, 6, 0L),
  ExitStatus.scala -> MacroInfo(7, 28, 0L),
  JavaEnv.scala -> MacroInfo(1, 6, 0L),
  TopologicalSort.scala -> MacroInfo(6, 56, 2L),
  CommonOptions.scala -> MacroInfo(1, 6, 0L),
  Cli.scala -> MacroInfo(1, 6, 0L),
  Dag.scala -> MacroInfo(1, 6, 0L)
)
Macro data in total:
MacroInfo(9357, 645150, 39813L)
Macro repeated expansions:
Map(
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Run\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"pipeName\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Run, Out]" -> 8,
  "shapeless.Annotations.materialize[caseapp.ValueDescription, bloop.cli.CliOptions, Out]" -> 47,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Run]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$RawCommand]" -> 4,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Projects\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"configDir\")]]" -> 94,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Help]" -> 8,
  "shapeless.Witness.apply[Symbol @@ String(\"common\")]" -> 47,
  "shapeless.Witness.apply[Symbol @@ String(\"cliOptions\")]" -> 22,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Console, Out]" -> 2,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Projects, Out]" -> 8,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Console, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Compile\")]]" -> 4,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Bsp, L]" -> 2,
  "shapeless.Default.materialize[bloop.cli.CommonOptions.CommonOptions$PrettyProperties, L]" -> 189,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"threads\")]]" -> 192,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"only\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"incremental\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Projects, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"command\")]]" -> 4,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.CommonOptions, Out]" -> 94,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Help, L]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Console\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Test, Out]" -> 2,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Test, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"ngerr\")]]" -> 188,
  "shapeless.Default.materialize[bloop.cli.CommonOptions, L]" -> 94,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"args\")]]" -> 8,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.CommonOptions, Out]" -> 282,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Compile]" -> 4,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Configure, Out]" -> 2,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"format\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"excludeRoot\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Test\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"dotGraph\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Recurse, caseapp.core.DefaultBaseCommand, Out]" -> 4,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Help, Out]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"project\")]]" -> 24,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"watch\")]]" -> 12,
  "shapeless.Default.materialize[bloop.cli.CliOptions, L]" -> 47,
  "scala.reflect.`package`.materializeClassTag[bloop.Project]()" -> 2,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Projects, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"out\")]]" -> 188,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"workingDirectory\")]]" -> 188,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Help, Out]" -> 4,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.CliOptions, Out]" -> 47,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"main\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"host\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.CommonOptions, Out]" -> 94,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"socket\")]]" -> 4,
  "scala.reflect.`package`.materializeClassTag[Array[bloop.Project]]()" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Help\")]]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Clean]" -> 4,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Test, L]" -> 2,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Projects, Out]" -> 4,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Run, L]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"in\")]]" -> 188,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Bsp\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"port\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Compile, Out]" -> 10,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Console, L]" -> 2,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Clean, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"About\")]]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.CommonOptions]" -> 188,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.CliOptions, Out]" -> 49,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"reporter\")]]" -> 16,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Compile, Out]" -> 2,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Run, Out]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[caseapp.core.DefaultBaseCommand]" -> 2,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Test with shapeless.labelled.labelled$KeyTag[Symbol with shapeless.tag.tag$Tagged[String(\"Test\")],bloop.cli.Commands.Commands$Test] :+: shapeless.CNil]" -> 44,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Projects, L]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"protocol\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.CliOptions, Out]" -> 51,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Console]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"env\")]]" -> 188,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.CliOptions, Out]" -> 47,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"ngout\")]]" -> 188,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Test, Out]" -> 4,
  "scala.reflect.`package`.materializeClassTag[String]()" -> 22,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Clean, L]" -> 2,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Projects]" -> 4,
  "shapeless.Strict.mkStrict[I]" -> 41,
  "scala.reflect.`package`.materializeClassTag[bloop.io.AbsolutePath]()" -> 10,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.CliOptions]" -> 94,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Test, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Configure\")]]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Autocomplete]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Test]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"verbose\")]]" -> 94,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Configure, L]" -> 2,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Run, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"mode\")]]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Clean\")]]" -> 4,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Clean, Out]" -> 4,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Bsp]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"isolated\")]]" -> 8,
  "shapeless.Annotation.materialize[caseapp.CommandName, bloop.cli.Commands.Commands$Bsp]" -> 2,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Compile, L]" -> 2,
  "shapeless.DefaultSymbolicLabelling.mkDefaultSymbolicLabelling[bloop.cli.Commands.Commands$Configure]" -> 4,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"version\")]]" -> 94,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"Autocomplete\")]]" -> 4,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Autocomplete, Out]" -> 2,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Bsp, Out]" -> 2,
  "shapeless.Witness.apply[Symbol with shapeless.tag.tag$Tagged[String(\"err\")]]" -> 188,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Run, Out]" -> 2,
  "shapeless.Annotations.materialize[caseapp.Hidden, bloop.cli.Commands.Commands$Help, Out]" -> 12,
  "shapeless.Annotations.materialize[caseapp.Recurse, bloop.cli.Commands.Commands$Autocomplete, Out]" -> 2,
  "shapeless.Annotations.materialize[caseapp.HelpMessage, bloop.cli.Commands.Commands$Bsp, Out]" -> 2,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$Autocomplete, L]" -> 2,
  "shapeless.Default.materialize[bloop.cli.Commands.Commands$About, L]" -> 2,
  "caseapp.util.AnnotationList.materialize[caseapp.Name, bloop.cli.Commands.Commands$Configure, Out]" -> 2
)
Implicit searches by position:
Map(
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-244,offset=10556 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-55,offset=2065 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-102,offset=3856 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Server.scala,line-17,offset=390 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala, 7937, 7937, 7939) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-106,offset=4586 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala, 15193, 15193, 15195) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-80,offset=2776 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-85,offset=2817 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-114,offset=4214 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2281 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-215,offset=9140 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3368 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-18,offset=502 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-55,offset=2081 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-183,offset=7070 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-113,offset=4447 -> 1,
  source-/data/rw/code/scala/loop/frontend/target/scala-2.12/src_managed/main/sbt-buildinfo/BuildInfo.scala,line-24,offset=1161 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-178,offset=6812 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-201,offset=8211 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala, 9547, 9547, 9549) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2268 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-38,offset=1317 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-315,offset=13809 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4235 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-107,offset=3930 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-27,offset=739 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-302,offset=12229 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 8594, 8594, 8596) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-304,offset=13178 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Build.scala,line-11,offset=351 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-201,offset=7446 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-314,offset=12707 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-65,offset=2537 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-402,offset=17310 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-26,offset=1017 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-42,offset=1624 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/ProjectUris.scala,line-20,offset=597 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-8,offset=146 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-67,offset=2123 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-183,offset=7113 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-32,offset=881 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 6927, 6927, 6929) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-334,offset=14515 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/Commands.scala,line-48,offset=1619 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-103,offset=3826 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-342,offset=15091 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-219,offset=8324 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/monix/FoldLeftAsyncConsumer.scala,line-39,offset=1281 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-182,offset=7014 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-132,offset=5070 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-40,offset=1516 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-251,offset=9194 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-87,offset=4129 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-335,offset=14603 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-73,offset=2826 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala, 8704, 8704, 8706) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-105,offset=5033 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-290,offset=12492 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-419,offset=18138 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-7,offset=111 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-84,offset=3159 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4076 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/validation/Validate.scala,line-18,offset=665 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-199,offset=7318 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-211,offset=8795 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-214,offset=8649 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-103,offset=3820 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/ResultsCache.scala,line-117,offset=4542 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-81,offset=3104 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-424,offset=18475 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-220,offset=9533 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-171,offset=7572 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 6927, 6981, 6983) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4260 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-216,offset=8701 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/logging/BspLogger.scala,line-42,offset=1371 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-29,offset=974 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-56,offset=1678 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/ExitStatus.scala,line-27,offset=874 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-108,offset=3977 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-18,offset=386 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-212,offset=8597 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-136,offset=5558 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-151,offset=6671 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-113,offset=4134 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 7396, 7396, 7403) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-210,offset=9974 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-171,offset=6387 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-247,offset=9056 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-201,offset=7454 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 6927, 7024, 7026) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-80,offset=3690 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-115,offset=4212 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala, 1221, 1221, 1223) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-400,offset=17175 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-240,offset=9808 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala, 1186, 1186, 1188) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-216,offset=9017 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-172,offset=6464 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-12,offset=282 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-41,offset=1688 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-65,offset=2360 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Build.scala,line-11,offset=359 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-27,offset=789 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala, 816, 816, 818) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-78,offset=3027 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-194,offset=8239 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-72,offset=2367 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4267 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-177,offset=6675 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-155,offset=5938 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/StateCache.scala,line-61,offset=2055 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-393,offset=16906 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-209,offset=8472 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3361 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-165,offset=7144 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-22,offset=517 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/logging/BspLogger.scala,line-38,offset=1286 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3339 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-91,offset=3262 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/ProjectUris.scala,line-15,offset=388 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=823 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=807 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/JavaEnv.scala,line-16,offset=483 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-22,offset=548 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-120,offset=4368 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-289,offset=12825 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-351,offset=15367 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-131,offset=5016 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-108,offset=3962 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/JavaEnv.scala,line-23,offset=690 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala, 1331, 1331, 1333) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-156,offset=5977 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala, 8416, 8416, 8418) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-151,offset=6662 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-96,offset=4261 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala, 6712, 6712, 6714) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2278 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/validation/Validate.scala,line-32,offset=1509 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-121,offset=4751 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-336,offset=14691 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-64,offset=2418 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/ResultsCache.scala,line-59,offset=2304 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-282,offset=12126 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-23,offset=571 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-107,offset=4641 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/logging/BspLogger.scala,line-34,offset=1201 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=816 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-202,offset=7510 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 5705, 5705, 5707) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-37,offset=1224 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-54,offset=1938 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-191,offset=7038 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-41,offset=1199 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-109,offset=4010 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-64,offset=2081 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-223,offset=8473 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-64,offset=2488 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-130,offset=5087 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/JavaCompat.scala,line-13,offset=317 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-114,offset=4176 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-126,offset=5508 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-427,offset=18542 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-185,offset=6918 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-243,offset=10514 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-169,offset=6510 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-252,offset=9243 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-167,offset=7263 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-417,offset=18016 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-125,offset=5279 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=969 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-171,offset=6401 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-52,offset=1566 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-226,offset=8421 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-115,offset=4204 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-114,offset=4168 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/ResultsCache.scala,line-96,offset=3806 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-142,offset=5417 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-27,offset=760 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-37,offset=1229 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/ResultsCache.scala,line-117,offset=4580 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-13,offset=306 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-324,offset=14202 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-162,offset=6171 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-301,offset=12137 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-102,offset=4059 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-182,offset=6972 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-131,offset=5131 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-228,offset=8493 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/ResultsCache.scala,line-62,offset=2430 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-101,offset=3811 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-258,offset=10522 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-206,offset=7676 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-84,offset=3324 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-45,offset=1716 -> 1,
  NoPosition -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-221,offset=9599 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-323,offset=14154 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4083 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala,line-86,offset=4097 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-204,offset=7608 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-125,offset=4904 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala, 8970, 8970, 8972) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-417,offset=18043 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala, 6927, 7079, 7081) -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-266,offset=12097 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-310,offset=13524 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-200,offset=7358 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4049 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=937 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-190,offset=7117 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestServer.scala,line-71,offset=2319 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-400,offset=17178 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-109,offset=4074 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-54,offset=2019 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-221,offset=9640 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-38,offset=1249 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-309,offset=13460 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-212,offset=8585 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Build.scala,line-11,offset=370 -> 1,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-109,offset=3997 -> 1,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 2278, 2278, 2280) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=974 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-83,offset=3019 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-28,offset=792 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala,line-144,offset=5512 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 2435, 2439, 2439) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 8071, 8075, 8075) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-143,offset=5419 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-310,offset=13491 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-198,offset=7643 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 2855, 2859, 2859) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 2190, 2194, 2194) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 3678, 3682, 3682) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-58,offset=2129 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-52,offset=1585 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-155,offset=5920 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/ProjectUris.scala,line-15,offset=397 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-36,offset=1200 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-195,offset=9368 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BspServer.scala, 1898, 1902, 1902) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 2644, 2648, 2648) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 3112, 3116, 3116) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-155,offset=5935 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala, 16791, 16798, 16798) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/TopologicalSort.scala,line-33,offset=968 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/util/JavaCompat.scala,line-10,offset=206 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala, 12123, 12127, 12127) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-37,offset=1242 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/SourceWatcher.scala, 1467, 1467, 1469) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-10,offset=211 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala, 4539, 4539, 4541) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Interpreter.scala, 13122, 13126, 13126) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/ExitStatus.scala,line-44,offset=1332 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-13,offset=288 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 3408, 3412, 3412) -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 4707, 4711, 4711) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-36,offset=1164 -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/logging/BspLogger.scala,line-73,offset=2617 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BspServer.scala, 1969, 1973, 1973) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Action.scala,line-11,offset=333 -> 2,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 5670, 5674, 5674) -> 2,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-116,offset=4246 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-201,offset=7470 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CommonOptions.scala,line-38,offset=1260 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala,line-61,offset=2300 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/io/FileTracker.scala,line-102,offset=3847 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-111,offset=4062 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Project.scala,line-87,offset=3347 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-282,offset=12140 -> 3,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-215,offset=9153 -> 3,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala, 1971, 1975, 1975) -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/testing/TestInternals.scala,line-219,offset=8340 -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-198,offset=7285 -> 4,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/ExitStatus.scala, 382, 394, 394) -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-22,offset=900 -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala,line-14,offset=364 -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/caches/StateCache.scala,line-68,offset=2160 -> 4,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/ExecutionContext.scala, 516, 535, 535) -> 4,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/Dag.scala,line-160,offset=5889 -> 4,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 8247, 8251, 8251) -> 6,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/completion/Case.scala, 258, 262, 262) -> 6,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/bsp/BloopBspServices.scala, 7822, 7826, 7826) -> 6,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Cli.scala,line-118,offset=4864 -> 6,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/ExitStatus.scala,line-33,offset=1095 -> 7,
  RangePosition(/data/rw/code/scala/loop/frontend/src/main/scala/bloop/exec/Forker.scala, 8015, 8019, 8019) -> 10,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-45,offset=1732 -> 18,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/engine/tasks/Tasks.scala,line-423,offset=18361 -> 18,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-38,offset=1386 -> 30,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-40,offset=1491 -> 662,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/Bloop.scala,line-22,offset=551 -> 1334,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-45,offset=1732 -> 15559,
  source-/data/rw/code/scala/loop/frontend/src/main/scala/bloop/cli/CliParsers.scala,line-43,offset=1615 -> 15581
)
Implicit searches by type:
Map(
  "shapeless.Generic.Aux[Some[caseapp.core.Default[java.io.InputStream]],G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"mode\")]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[String] :: shapeless.HNil,G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"ngerr\")]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Int],G]" -> 1,
  "shapeless.Default.Aux[bloop.cli.CliOptions,Options]" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Boolean]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[java.io.InputStream],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.CommonOptions,M]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[None.type,G]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[String]],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Compile,R]" -> 1,
  "shapeless.Generic.Aux[shapeless.HNil,G]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[java.nio.file.Path]]],G]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.CommonOptions,N]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[Boolean]],G]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[java.io.PrintStream],G]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CommonOptions] :: shapeless.HNil,bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Int] :: shapeless.HNil,G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: shapeless.HNil,Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.CommonOptions,K]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[java.io.PrintStream]],G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.About,D]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[java.io.PrintStream]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.CliOptions,N]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.CommonOptions,D]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.CommonOptions,V]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[Int,L]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[java.io.PrintStream] :: Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,Out0]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"env\")]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Boolean],G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")]]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[java.io.PrintStream]],G]" -> 1,
  "shapeless.Generic.Aux[java.io.PrintStream,L]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Int]],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.CliOptions,M]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.CliOptions,V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.CommonOptions,V]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[Int]],G]" -> 1,
  "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[java.io.InputStream] :: shapeless.HNil,G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[java.io.PrintStream] :: shapeless.HNil,G]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"err\")]]" -> 1,
  "shapeless.Strict[caseapp.core.Parser.Aux[bloop.cli.CliOptions,HD]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.InputStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Strict[shapeless.Default.Aux[bloop.cli.CommonOptions.PrettyProperties,D]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Clean,M]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[shapeless.HNil,shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.CliOptions,V]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"threads\")) :: shapeless.HNil,Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]],G]" -> 1,
  "caseapp.core.HListParser[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[String]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Default[bloop.cli.CommonOptions.PrettyProperties]{type Out = D}" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.CliOptions,L]" -> 1,
  "shapeless.Generic.Aux[String,L]" -> 1,
  "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"common\")) :: shapeless.HNil,bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[String]],G]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.CommonOptions.PrettyProperties,L]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"workingDirectory\")) :: (Symbol @@ String(\"out\")) :: (Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,R]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Boolean] :: shapeless.HNil,G]" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser.Aux[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,PT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Int]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Boolean]],G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"verbose\")]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,PT]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.CommonOptions,R]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Help,V]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[String],G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"in\")]]" -> 1,
  "shapeless.Default.Aux[caseapp.core.DefaultBaseCommand,Options]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"out\")]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[List[String]]],G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"ngout\")]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"out\")) :: (Symbol @@ String(\"in\")) :: (Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"version\")) :: (Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties],G]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Boolean,L]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.CommonOptions,Repr]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.BspProtocol]],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Help,M]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[T]],List[String],That]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],ch.epfl.scala.bsp.schema.BuildTarget,Seq[ch.epfl.scala.bsp.schema.BuildTarget]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.CliOptions,H]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[Option[String]]],G]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,P]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil,G]" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.ReporterKind]],G]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Option[String],L]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Projects,H]" -> 1,
  "shapeless.Generic.Aux[java.io.InputStream,L]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"reporter\")]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"err\")) :: (Symbol @@ String(\"ngout\")) :: (Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[java.io.InputStream]],G]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.CommonOptions,L]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[List[String]]],G]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"configDir\")) :: (Symbol @@ String(\"version\")) :: (Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,R]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Option[String]] :: shapeless.HNil,G]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.CliOptions,D]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"ngerr\")) :: (Symbol @@ String(\"env\")) :: (Symbol @@ String(\"threads\")) :: shapeless.HNil,java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"configDir\")]]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Projects,V]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"verbose\")) :: (Symbol @@ String(\"common\")) :: shapeless.HNil,Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Default.Aux[bloop.cli.CommonOptions,Options]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"workingDirectory\")],String] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"out\")],java.io.PrintStream] :: java.io.InputStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"in\")],java.io.InputStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"err\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngout\")],java.io.PrintStream] :: java.io.PrintStream with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"ngerr\")],java.io.PrintStream] :: bloop.cli.CommonOptions.PrettyProperties with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"env\")],bloop.cli.CommonOptions.PrettyProperties] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: shapeless.HNil,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = HD}" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Test,K]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties] :: shapeless.HNil,G]" -> 1,
  "Array[Boolean] => Array[sbt.testing.Selector]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[java.nio.file.Path],bloop.io.AbsolutePath,That]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[java.io.PrintStream] :: Some[bloop.cli.CommonOptions.PrettyProperties] :: Some[Int] :: shapeless.HNil,java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil,OutT]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.CliOptions,K]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Option[java.nio.file.Path]],G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,HD]]" -> 1,
  "scala.math.Ordering[String]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[Option[java.nio.file.Path]]],G]" -> 1,
  "scala.collection.generic.CanBuildFrom[String,Char,String]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"threads\")]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.Parser[bloop.cli.CommonOptions]{type D = HD}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Configure,K]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Option[java.nio.file.Path]] :: Some[Boolean] :: Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,Out0]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Configure,V]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Int :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Option[String]] :: Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[java.io.InputStream]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.DefaultBaseCommand,V]" -> 1,
  "Array[java.io.File] => ?{def toSeq: ?}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Bsp,M]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "scala.reflect.ClassTag[sbt.testing.TaskDef]" -> 1,
  "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"configDir\")],Option[java.nio.file.Path]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"version\")],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"verbose\")],Boolean] :: bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Boolean] :: Option[Boolean] :: Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,Some[caseapp.ValueDescription] :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = HD}" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Run,L]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],monix.eval.Task[Int],That]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.CliOptions,Repr]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CommonOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"common\")],bloop.cli.CommonOptions] :: shapeless.HNil,Option[bloop.cli.CommonOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Bsp,D]" -> 1,
  "caseapp.core.HListParser[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[java.io.PrintStream] :: Option[java.io.InputStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[java.io.PrintStream] :: Option[bloop.cli.CommonOptions.PrettyProperties] :: Option[Int] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: Some[caseapp.Hidden] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,HD]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.CommonOptions,H]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"socket\")]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "caseapp.core.CommandParser[shapeless.CNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,caseapp.core.DefaultBaseCommand,V]" -> 1,
  "caseapp.core.Parser[bloop.cli.CliOptions]{type D = HD}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]],G]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.RawCommand]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CommonOptions] :: shapeless.HNil,Boolean :: bloop.cli.CommonOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.ReporterKind,L]" -> 1,
  "shapeless.Strict[caseapp.core.Parser.Aux[bloop.cli.CommonOptions,HD]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[xsbti.api.ClassLike],xsbti.api.Definition,That]" -> 1,
  "bloopName.type => ?{def capitalize: ?}" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.About,R]" -> 1,
  "shapeless.Generic.Aux[Option[java.nio.file.Path],L]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"incremental\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[String],Array[String],That]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[String]]],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.CliOptions,R]" -> 1,
  "args.type => ?{def toList: ?}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.BspProtocol,L]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"watch\")]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Projects,M]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.io.AbsolutePath],bloop.io.AbsolutePath,That]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Clean,K]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Configure,V]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"version\")]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.RawCommand,V]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Bsp,Repr]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.About,Repr]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.ReporterKind],G]" -> 1,
  "(=> T) => java.util.function.Supplier[T]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.ReporterKind]],G]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,Out0]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[List[String]],G]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Compile,Options]" -> 1,
  "(=> (Nothing, Nothing)) => Iterable[com.google.protobuf.ByteString]" -> 1,
  "(=> Option[bloop.engine.Dag[?T]]) => Option[List[bloop.engine.Dag[T]]]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Mode]],G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "proj.name.type => ?{def ->: ?}" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[Option[String]]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "(=> Array[Float]) => Array[String]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Run,V]" -> 1,
  "(=> (Nothing, Nothing)) => StringBuilder" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Console,V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Clean,R]" -> 1,
  "x$1.sources.type => ?{def toList: ?}" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Configure,R]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Clean,V]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[shapeless.CNil,K]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "p.dependencies.type => ?{def filterNot: ?}" -> 1,
  "(=> Unit) => CharSequence" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Help,L]" -> 1,
  "Array[sbt.testing.Fingerprint] => ?{def foreach: ?}" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.BspProtocol]],G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Configure,Repr]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Test,M]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.AppName,caseapp.core.DefaultBaseCommand]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],String,List[String]]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"isolated\")]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Iterable[xsbti.compile.analysis.SourceInfo],String,That]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Run,K]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[xsbti.api.Definition],xsbti.api.Definition,That]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil,G]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Compile,V]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.DefaultBaseCommand,Repr]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Console,H]" -> 1,
  "caseapp.Parser[bloop.cli.CliOptions]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"dotGraph\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "Array[Int] => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"dotGraph\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Bsp,R]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Mode],G]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"project\")]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.io.AbsolutePath],(bloop.io.AbsolutePath, java.nio.file.attribute.FileTime),That]" -> 1,
  "(=> Array[Char]) => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Test,D]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[bloop.Project]],bloop.Project,That]" -> 1,
  "agentFiles.type => ?{def filter: ?}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Compile,M]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[Option[String]],G]" -> 1,
  "caseapp.core.Messages[bloop.cli.CliOptions]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Compile,K]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Bsp,Options]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"main\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Autocomplete,R]" -> 1,
  "frameworks.type => ?{def foreach: ?}" -> 1,
  "(=> Unit) => java.util.Properties" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Projects,Options]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"protocol\")]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil,G]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,caseapp.core.DefaultBaseCommand,N]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ProgName,caseapp.core.DefaultBaseCommand]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"main\")]]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[(bloop.Project, bloop.Compiler.Result)],bloop.Project,List[bloop.Project]]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[java.nio.file.Path],java.nio.file.Path,That]" -> 1,
  "List[sbt.testing.TaskDef] => scala.collection.GenTraversableOnce[B]" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.RawCommand,C]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.completion.Mode]],G]" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"excludeRoot\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "Array[Long] => Array[String]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Clean,N]" -> 1,
  "caseapp.core.HListParser[bloop.cli.BspProtocol with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"protocol\")],bloop.cli.BspProtocol] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil,G]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Test,Repr]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.About,K]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Annotation[caseapp.ProgName,bloop.cli.CliOptions]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[bloop.Project]],bloop.engine.tasks.Tasks.CompileTask,That]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Clean,L]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "(=> (Nothing, Nothing)) => java.nio.ByteBuffer" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Test,V]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"main\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Test,R]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")]]" -> 1,
  "caseapp.core.HListParser[bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil]" -> 1,
  "x$1._2.dependencies.type => ?{def isEmpty: ?}" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "List[String] => scala.collection.GenTraversableOnce[B]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.BspProtocol] :: Some[String] :: Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "Double => Int" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "Option[sbt.testing.Framework] => scala.collection.GenTraversableOnce[?]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Compile,L]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Configure,H]" -> 1,
  "shapeless.Annotation[caseapp.ProgName,caseapp.core.DefaultBaseCommand]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Autocomplete,K]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[(bloop.Project, bloop.Compiler.Result)],ch.epfl.scala.bsp.schema.CompileReportItem,That]" -> 1,
  "configFiles.type => ?{def iterator: ?}" -> 1,
  "String(\"^\\\\Q\\\\\\\\.\\\\pipe\\\\\\\\E(.*)\") => ?{def r: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[xsbti.api.Definition],xsbti.api.ClassLike,Seq[xsbti.api.ClassLike]]" -> 1,
  "currentProject.type => ?{def nonEmpty: ?}" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Configure,L]" -> 1,
  "shapeless.Annotation[caseapp.AppVersion,caseapp.core.DefaultBaseCommand]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,caseapp.core.DefaultBaseCommand,M]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"only\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "this.Out <:< (bloop.cli.Commands.About :+: bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil)" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[String],String,That]" -> 1,
  "caseapp.core.Parser[caseapp.core.DefaultBaseCommand]" -> 1,
  "scala.languageFeature.implicitConversions" -> 1,
  "caseapp.core.HListParser.Aux[bloop.cli.completion.Mode with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"mode\")],bloop.cli.completion.Mode] :: bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,PT]" -> 1,
  "Array[Byte] => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Run,R]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil,None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "scala.reflect.ClassTag[java.net.URL]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],bloop.engine.Dag[bloop.Project],That]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Console,L]" -> 1,
  "p.name.type => ?{def ->: ?}" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Test,Options]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Compile,V]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.AppVersion,caseapp.core.DefaultBaseCommand]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Compile,D]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Autocomplete,N]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Autocomplete,Options]" -> 1,
  "Array[String] => Seq[String]" -> 2,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Console,R]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ProgName,bloop.cli.CliOptions]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,shapeless.CNil]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "Unit => CharSequence" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"args\")]]" -> 1,
  "shapeless.Generic.Aux[Option[caseapp.core.Default[bloop.cli.completion.Format]],G]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete,V]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Configure,Options]" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[T]],(String, Boolean, sbt.testing.Framework, T),Set[bloop.testing.TestInternals.PrintInfo[T]]]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"port\")]]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[BloopBspServices.this.ProjectMapping],ch.epfl.scala.bsp.schema.DependencySourcesItem,Seq[ch.epfl.scala.bsp.schema.DependencySourcesItem]]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "project.classpath.type => ?{def map: ?}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.About,V]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[None.type :: shapeless.HNil,Option[String] :: shapeless.HNil,OutT]" -> 1,
  "Array[Array[bloop.Project]] => ?{def map: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],bloop.Project,List[bloop.Project]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[(String, caseapp.core.CommandMessages)],String,That]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]{type P = P}" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[List[String]] :: shapeless.HNil,G]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"host\")) :: (Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "shapeless.Generic.Aux[List[String],L]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "T => java.util.function.Supplier[T]" -> 1,
  "parts.type => ?{def mkString: ?}" -> 1,
  "Unit => Array[Byte]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"mode\")) :: (Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.About,V]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[bloop.cli.CliOptions] :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Bsp,K]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Test,L]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"command\")]]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.RawCommand]" -> 1,
  "Array[Unit] => Array[sbt.testing.Selector]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"pipeName\")]]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],monix.eval.Task[(bloop.Project, bloop.Compiler.Result)],That]" -> 1,
  "String(\"name: %s, version: %s, scalaVersion: %s, sbtVersion: %s, buildIntegrationsIndex: %s, nailgunClientLocation: %s, zincVersion: %s, developers: %s\") => ?{def format: ?}" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: (Symbol @@ String(\"mode\")) :: (Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,R]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Compile,N]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Autocomplete,D]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Bsp,V]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Format]],G]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Console,V]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Help,N]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.RawCommand,K]" -> 1,
  "Unit => java.util.Map[_ <: ?K, _ <: ?V]" -> 1,
  "(=> (Nothing, Nothing, Nothing)) => Int" -> 1,
  "shapeless.LabelledGeneric.Aux[shapeless.CNil,C]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Bsp,V]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,caseapp.core.DefaultBaseCommand,R]" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[T],String,That]" -> 1,
  "(=> (Nothing, Nothing, Nothing)) => String" -> 7,
  "java.util.Map[String,String] => ?{def asScala: ?}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Autocomplete,Repr]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.About,L]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Clean,Options]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Help,K]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.config.Config.TestArgument],bloop.config.Config.TestArgument,That]" -> 1,
  "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Typeable[bloop.cli.CliOptions]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Configure,M]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[(sbt.testing.Framework, sbt.testing.TaskDef)],String,That]" -> 1,
  "T => ?{def ->: ?}" -> 1,
  "p.type => ?{def ->: ?}" -> 1,
  "caseapp.core.HListParser[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Console,N]" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[sbt.testing.SubclassFingerprint]],String,Set[String]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"main\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "Unit => java.util.Properties" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Run,M]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"dotGraph\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.BspProtocol],G]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[(sbt.testing.Framework, List[sbt.testing.TaskDef])],(sbt.testing.Framework, sbt.testing.TaskDef),That]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],String,That]" -> 1,
  "(=> Unit) => java.util.Map[_ <: ?K, _ <: ?V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.About,H]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"incremental\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Run,Repr]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "monix.execution.Scheduler" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[sbt.testing.SubclassFingerprint]],(String, Boolean, sbt.testing.Framework, sbt.testing.Fingerprint),Set[(String, Boolean, sbt.testing.Framework, sbt.testing.Fingerprint)]]" -> 1,
  "Array[Byte] => Array[String]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Projects,R]" -> 1,
  "Unit => Long" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "((Nothing, Nothing)) => java.nio.ByteBuffer" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,P]]" -> 1,
  "scala.reflect.ClassTag[(bloop.io.AbsolutePath, java.nio.file.attribute.FileTime)]" -> 1,
  "scala.util.Try[bloop.engine.State] <:< scala.util.Try[B]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Generic.Aux[Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil,G]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.io.AbsolutePath],String,That]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Option[String]] :: Some[bloop.cli.ReporterKind] :: Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[String],java.util.regex.Pattern,That]" -> 1,
  "p.dependencies.type => ?{def iterator: ?}" -> 1,
  "(=> Unit) => java.util.Locale" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"only\")]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Test,H]" -> 1,
  "(=> Array[Short]) => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Console,Repr]" -> 1,
  "scala.reflect.ClassTag[sbt.testing.Framework]" -> 1,
  "Forker.this.classpath.type => ?{def map: ?}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Int] :: Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[String],String,That]" -> 1,
  "scala.collection.generic.CanBuildFrom[Iterable[sbt.testing.TaskDef],sbt.testing.TaskDef,That]" -> 1,
  "(=> Array[Int]) => Array[String]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[caseapp.core.DefaultBaseCommand,K]" -> 1,
  "caseapp.core.HListParser[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Projects,N]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Projects,D]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "(=> (Nothing, Nothing)) => java.util.List[String]" -> 1,
  "frameworks.type => ?{def map: ?}" -> 1,
  "(=> Unit) => Array[Byte]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[bloop.engine.tasks.Tasks.CompileResult]],bloop.Project,That]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "Array[Boolean] => Array[String]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Run,H]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"format\")]]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Format],G]" -> 1,
  "java.util.Optional[xsbti.compile.AnalysisContents] => ?{def toOption: ?}" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,V]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[T]],bloop.engine.Dag[T],That]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Projects,K]" -> 1,
  "n.dependencies.type => ?{def map: ?}" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Test,N]" -> 1,
  "(=> Unit) => Character" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Option[java.nio.file.Path]] :: Some[Option[String]] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "Array[Double] => Array[sbt.testing.Selector]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.config.Config.TestFramework],sbt.testing.Framework,That]" -> 1,
  "(=> Array[Boolean]) => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Console,D]" -> 1,
  "caseapp.core.HListParser[bloop.cli.completion.Format with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"format\")],bloop.cli.completion.Format] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Console,M]" -> 1,
  "shapeless.Generic.Aux[caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil,G]" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "((Nothing, Nothing, Nothing)) => Array[Byte]" -> 1,
  "f.type => ?{def tail: ?}" -> 1,
  "String(\"-([a-z])\") => ?{def r: ?}" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Test,V]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Run,V]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Help,D]" -> 1,
  "(String, caseapp.core.CommandMessages) <:< (T, U)" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Projects,Repr]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Help,H]" -> 1,
  "(=> Array[Char]) => Array[String]" -> 1,
  "Array[Char] => Array[String]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "scala.reflect.ClassTag[sbt.testing.Selector]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "x$3.type => ?{def map: ?}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"command\")],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],Option[String]] :: shapeless.HNil,Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Help,Repr]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.completion.Format,L]" -> 1,
  "parsed.type => ?{def headOption: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[T]],String,That]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Boolean] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "(=> Float) => Int" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Autocomplete,H]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "classpath.type => ?{def map: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[(sbt.testing.Framework, sbt.testing.TaskDef)],sbt.testing.TaskDef,List[sbt.testing.TaskDef]]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "((Nothing, Nothing, Nothing)) => Int" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Help,Options]" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Clean,H]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.About,N]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[None.type :: None.type :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil,OutT]" -> 1,
  "scala.options.type => ?{def toArray: ?}" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Run,N]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Clean,D]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Annotation[caseapp.AppName,bloop.cli.CliOptions]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Bsp,H]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"args\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Autocomplete,L]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Run,Options]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.labelled.FieldType[Symbol @@ String(\"mode\"),bloop.cli.completion.Mode] :: shapeless.labelled.FieldType[Symbol @@ String(\"format\"),bloop.cli.completion.Format] :: shapeless.labelled.FieldType[Symbol @@ String(\"command\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"project\"),Option[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.CliOptions] :: Option[bloop.cli.completion.Mode] :: Option[bloop.cli.completion.Format] :: Option[Option[String]] :: Option[Option[String]] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.Recurse] :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,P]]" -> 1,
  "caseapp.core.HListParser[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "shapeless.Annotation[caseapp.AppVersion,bloop.cli.CliOptions]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,K]" -> 1,
  "Array[Long] => Array[sbt.testing.Selector]" -> 1,
  "Array[Unit] => Array[String]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.tasks.Tasks.CompileResult],(bloop.Project, bloop.Compiler.Result),That]" -> 1,
  "((Nothing, Nothing)) => Int" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: shapeless.HNil,Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
  "(=> Array[Byte]) => Array[String]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "Array[Short] => Array[sbt.testing.Selector]" -> 1,
  "Array[bloop.config.Config.TestArgument] => ?{def flatMap: ?}" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.About,M]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "(=> (Nothing, Nothing)) => Int" -> 1,
  "shapeless.Default.AsOptions.Aux[caseapp.core.DefaultBaseCommand,D]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Autocomplete,V]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,bloop.cli.Commands.Compile,H]" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[bloop.Project],String,That]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"incremental\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.AppVersion,bloop.cli.CliOptions]" -> 1,
  "Array[Object] => ?{def map: ?}" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"main\")],Option[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Option[String]] :: Option[bloop.cli.ReporterKind] :: Option[List[String]] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "Unit =:= Unit" -> 1,
  "scala.reflect.ClassTag[Array[String]]" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"host\")]]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Configure,N]" -> 1,
  "project.dependencies.type => ?{def toArray: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],(String, bloop.Project),That]" -> 1,
  "Array[Array[bloop.Project]] => scala.collection.GenTraversableOnce[?]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[sbt.testing.TaskDef],(sbt.testing.Framework, sbt.testing.TaskDef),That]" -> 1,
  "(=> (Nothing, Nothing)) => Array[java.net.URL]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Recurse,bloop.cli.Commands.Help,R]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Bsp,L]" -> 1,
  "caseapp.core.Messages[caseapp.core.DefaultBaseCommand]" -> 1,
  "((Nothing, Nothing)) => java.util.List[String]" -> 1,
  "Array[Double] => Array[String]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Run,D]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"protocol\")) :: (Symbol @@ String(\"host\")) :: (Symbol @@ String(\"port\")) :: (Symbol @@ String(\"socket\")) :: (Symbol @@ String(\"pipeName\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.About with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"About\")],bloop.cli.Commands.About] :+: bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "Project.this.rawClasspath.type => ?{def +:: ?}" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[shapeless.HNil,shapeless.HNil,R]" -> 1,
  "(=> Array[Boolean]) => Array[String]" -> 1,
  "caseapp.core.HListParser[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"incremental\")],Boolean] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = PT}" -> 1,
  "(=> (Nothing, Nothing)) => StringBuffer" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
  "scala.jars.type => ?{def map: ?}" -> 1,
  "shapeless.ops.coproduct.ZipWithKeys.Aux[(Symbol @@ String(\"About\")) :: (Symbol @@ String(\"Autocomplete\")) :: (Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.About :+: bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil,R]" -> 1,
  "tEvents.type => ?{def foreach: ?}" -> 1,
  "(=> Array[Unit]) => Array[String]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.completion.Mode,L]" -> 1,
  "shapeless.Typeable[caseapp.core.DefaultBaseCommand]" -> 1,
  "Array[Array[bloop.Project]] => ?{def ++: ?}" -> 1,
  "project.type => ?{def ->: ?}" -> 2,
  "(=> (Nothing, Nothing)) => Array[Char]" -> 1,
  "shapeless.LabelledGeneric.Aux[caseapp.core.DefaultBaseCommand,L]" -> 1,
  "shapeless.DefaultSymbolicLabelling.Aux[bloop.cli.Commands.Console,K]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.AppName,bloop.cli.CliOptions]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[String] :: Some[Boolean] :: Some[List[String]] :: Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "StateCache.this.cache.type => ?{def asScala: ?}" -> 1,
  "project.dependencies.type => ?{def isEmpty: ?}" -> 1,
  "(=> scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[sbt.testing.SubclassFingerprint]]) => Set[(String, Boolean, sbt.testing.Framework, sbt.testing.Fingerprint)]" -> 1,
  "(=> Array[Long]) => Array[String]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.engine.Dag[T]],T,That]" -> 1,
  "caseapp.core.HListParser[bloop.cli.BspProtocol with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"protocol\")],bloop.cli.BspProtocol] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "path.type => ?{def ->: ?}" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[sbt.testing.Framework],String,That]" -> 1,
  "(=> Unit) => Long" -> 1,
  "Unit => java.util.Locale" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Clean,V]" -> 1,
  "(=> Array[Byte]) => Array[sbt.testing.Selector]" -> 1,
  "(=> Array[Float]) => Array[sbt.testing.Selector]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"project\")],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"isolated\")],Boolean] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"only\")],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"args\")],List[String]] :: bloop.cli.ReporterKind with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"reporter\")],bloop.cli.ReporterKind] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"watch\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Boolean] :: Option[List[String]] :: Option[List[String]] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]{type P = P}" -> 1,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"incremental\")]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.config.Config.TestArgument],String,That]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[BloopBspServices.this.ProjectMapping],bloop.Project,That]" -> 1,
  "Array[String] => ?{def mkString: ?}" -> 2,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Annotations.Aux[caseapp.HelpMessage,bloop.cli.Commands.Autocomplete,M]" -> 1,
  "(=> Array[Double]) => Array[String]" -> 1,
  "String(\"([A-Z])\") => ?{def r: ?}" -> 1,
  "caseapp.core.CommandsMessages[shapeless.CNil]" -> 1,
  "(=> Array[Double]) => Array[sbt.testing.Selector]" -> 1,
  "((Nothing, Nothing)) => Array[Char]" -> 1,
  "scala.collection.mutable.Map[String,String] => ?{def asJava: ?}" -> 1,
  "scalaz.Show[bloop.engine.tasks.Tasks.CompileResult]" -> 1,
  "shapeless.Strict[caseapp.core.CommandParser[this.Out]]" -> 1,
  "agentFiles.type => ?{def mkString: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[monix.eval.Task[Int]],Int,List[Int]]" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Projects,V]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.io.AbsolutePath],java.io.InputStream,That]" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.HListParser[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"host\")],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"port\")],Int] :: Option[java.nio.file.Path] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"socket\")],Option[java.nio.file.Path]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"pipeName\")],Option[String]] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "Null <:< ClassLoader" -> 1,
  "((Nothing, Nothing)) => Iterable[com.google.protobuf.ByteString]" -> 1,
  "scala.reflect.ClassTag[java.io.File]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil,C]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.CliOptions]" -> 1,
  "Array[(bloop.io.AbsolutePath, java.nio.file.attribute.FileTime)] => ?{def toList: ?}" -> 1,
  "shapeless.Annotations.Aux[caseapp.ValueDescription,bloop.cli.Commands.Help,V]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "Forker.this.javaEnv.javaOptions.type => ?{def toList: ?}" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"project\")) :: (Symbol @@ String(\"isolated\")) :: (Symbol @@ String(\"only\")) :: (Symbol @@ String(\"args\")) :: (Symbol @@ String(\"reporter\")) :: (Symbol @@ String(\"watch\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "(=> Array[Short]) => Array[String]" -> 1,
  "shapeless.Annotations.Aux[caseapp.Hidden,caseapp.core.DefaultBaseCommand,H]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[(String, caseapp.core.CommandMessages)],String,Seq[String]]" -> 1,
  "proj.dependencies.type => ?{def foreach: ?}" -> 1,
  "(=> Unit) => java.util.Map[_ <: Int, _ <: bloop.cli.ExitStatus]" -> 1,
  "projects.type => ?{def ->: ?}" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[bloop.cli.ReporterKind] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,OutT]" -> 1,
  "caseapp.core.HListParser[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"threads\")],Int] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Int] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil]" -> 1,
  "shapeless.Default.AsOptions.Aux[bloop.cli.Commands.Configure,D]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Strict[caseapp.core.CommandsMessages[this.Out]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[xsbti.api.AnalyzedClass],xsbti.api.Definition,That]" -> 1,
  "(=> Unit) => java.util.Collection[_ <: ?E]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.CliOptions]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "((Nothing, Nothing)) => StringBuilder" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Compile,Repr]" -> 1,
  "java.util.Optional[xsbti.compile.MiniSetup] => ?{def toOption: ?}" -> 1,
  "((Nothing, Nothing)) => Array[java.net.URL]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.cli.ExitStatus],String,That]" -> 1,
  "shapeless.Generic.Aux[bloop.cli.Commands.Clean,Repr]" -> 1,
  "Array[Char] => Array[sbt.testing.Selector]" -> 1,
  "userArgs.type => ?{def mkString: ?}" -> 1,
  "caseapp.core.CommandsMessages[bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "project.java.options.type => ?{def toArray: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.io.AbsolutePath],java.io.File,That]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[BloopBspServices.this.ProjectMapping],ch.epfl.scala.bsp.schema.ScalacOptionsItem,Seq[ch.epfl.scala.bsp.schema.ScalacOptionsItem]]" -> 1,
  "caseapp.util.AnnotationList.Aux[caseapp.Name,bloop.cli.Commands.Bsp,N]" -> 1,
  "((Nothing, Nothing, Nothing)) => String" -> 7,
  "bloop.logging.Logger => sbt.util.Logger" -> 1,
  "(=> Array[Int]) => Array[sbt.testing.Selector]" -> 1,
  "Array[Float] => Array[sbt.testing.Selector]" -> 1,
  "Unit => Character" -> 1,
  "mainClasses.type => ?{def mkString: ?}" -> 1,
  "Array[bloop.io.AbsolutePath] => scala.collection.GenTraversableOnce[?]" -> 1,
  "Array[String] => scala.collection.GenTraversableOnce[?]" -> 2,
  "project.dependencies.type => ?{def iterator: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.io.AbsolutePath],java.net.URL,That]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.Console,Options]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"protocol\"),bloop.cli.BspProtocol] :: shapeless.labelled.FieldType[Symbol @@ String(\"host\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"port\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"socket\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"pipeName\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[bloop.cli.BspProtocol] :: Option[String] :: Option[Int] :: Option[Option[java.nio.file.Path]] :: Option[Option[String]] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: ::[caseapp.Name] :: ::[caseapp.Name] :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "shapeless.Default.Aux[bloop.cli.Commands.About,Options]" -> 1,
  "scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[sbt.testing.SubclassFingerprint]] => Set[(String, Boolean, sbt.testing.Framework, sbt.testing.Fingerprint)]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"threads\")) :: (Symbol @@ String(\"cliOptions\")) :: shapeless.HNil,Int :: bloop.cli.CliOptions :: shapeless.HNil,R]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"excludeRoot\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out,Option[String] :: Option[bloop.cli.ReporterKind] :: Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,::[caseapp.Name] :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: None.type :: shapeless.HNil,None.type :: None.type :: None.type :: Some[caseapp.Recurse] :: shapeless.HNil,P]]" -> 1,
  "String => ?{def ++: ?}" -> 1,
  "project.classpath.type => ?{def iterator: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[bloop.testing.TestInternals.PrintInfo[sbt.testing.AnnotatedFingerprint]],String,Set[String]]" -> 1,
  "scala.collection.generic.CanBuildFrom[Seq[caseapp.Name],caseapp.Name,That]" -> 1,
  "shapeless.LabelledGeneric.Aux[bloop.cli.Commands.Projects,L]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[Some[List[String]] :: Some[Boolean] :: Some[bloop.cli.CliOptions] :: shapeless.HNil,List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil,Out0]" -> 1,
  "Forker.this.classpath.type => ?{def ++: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[Object],String,That]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Strict[caseapp.core.HListParser.Aux[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"excludeRoot\")],Boolean] :: bloop.cli.CliOptions with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"cliOptions\")],bloop.cli.CliOptions] :: shapeless.HNil,Option[Boolean] :: Option[bloop.cli.CliOptions] :: shapeless.HNil,scala.collection.immutable.Nil.type :: scala.collection.immutable.Nil.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,Some[caseapp.HelpMessage] :: None.type :: shapeless.HNil,None.type :: None.type :: shapeless.HNil,None.type :: Some[caseapp.Recurse] :: shapeless.HNil,PT]]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Autocomplete with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")],bloop.cli.Commands.Autocomplete] :+: bloop.cli.Commands.Bsp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Bsp\")],bloop.cli.Commands.Bsp] :+: bloop.cli.Commands.Clean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Clean\")],bloop.cli.Commands.Clean] :+: bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "Array[Float] => Array[String]" -> 1,
  "instance.allJars.type => ?{def iterator: ?}" -> 1,
  "(=> Array[Unit]) => Array[sbt.testing.Selector]" -> 1,
  "(sbt.testing.Framework, List[sbt.testing.TaskDef]) <:< (sbt.testing.Framework, List[sbt.testing.TaskDef])" -> 1,
  "project.sources.type => ?{def map: ?}" -> 1,
  "caseapp.core.CommandParser[bloop.cli.Commands.Compile with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Compile\")],bloop.cli.Commands.Compile] :+: bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "Unit => java.util.Collection[_ <: ?E]" -> 1,
  "Forker.this.javaEnv.javaOptions.type => ?{def mkString: ?}" -> 1,
  "(=> Double) => Int" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,caseapp.core.DefaultBaseCommand]" -> 1,
  "Array[String] => ?{def +:: ?}" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,caseapp.core.DefaultBaseCommand]" -> 1,
  "Unit => java.util.Map[_ <: Int, _ <: bloop.cli.ExitStatus]" -> 1,
  "shapeless.Annotation[caseapp.AppName,caseapp.core.DefaultBaseCommand]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.Aux[(Symbol @@ String(\"format\")) :: (Symbol @@ String(\"command\")) :: (Symbol @@ String(\"project\")) :: shapeless.HNil,bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil,ZwkOut]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,shapeless.CNil]" -> 1,
  "project.testFrameworks.type => ?{def flatMap: ?}" -> 1,
  "String => scala.collection.GenTraversableOnce[?]" -> 1,
  "(=> (Nothing, Nothing, Nothing)) => Array[Byte]" -> 1,
  "Option[bloop.engine.Dag[?T]] => Option[List[bloop.engine.Dag[T]]]" -> 1,
  "shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< shapeless.HNil" -> 1,
  "bloop.engine.ExecutionContext.ioScheduler.type => ?{def scheduleWithFixedDelay(x$1: ? >: scala.concurrent.duration.FiniteDuration,x$2: ? >: scala.concurrent.duration.FiniteDuration): ?}" -> 1,
  "String => ?{def toInt: ?}" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Configure with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Configure\")],bloop.cli.Commands.Configure] :+: bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "project.scalacOptions.type => ?{def :+: ?}" -> 1,
  "Array[Int] => Array[String]" -> 1,
  "Seq[java.nio.file.Path] => ?{def asJava: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[Array[bloop.Project],bloop.Project,That]" -> 1,
  "((Nothing, Nothing)) => StringBuffer" -> 1,
  "Float => Int" -> 1,
  "project.sources.type => ?{def iterator: ?}" -> 1,
  "scala.collection.generic.CanBuildFrom[List[bloop.Project],bloop.Project,That]" -> 1,
  "(=> Array[Long]) => Array[sbt.testing.Selector]" -> 1,
  "shapeless.Annotation[caseapp.ArgsName,bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "shapeless.Default.AsOptions.Helper.Aux[shapeless.HNil,shapeless.HNil,Out0]" -> 1,
  "scala.reflect.ClassTag[bloop.config.Config.TestArgument]" -> 1,
  "caseapp.util.AnnotationOption[caseapp.ArgsName,bloop.cli.Commands.Console with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Console\")],bloop.cli.Commands.Console] :+: bloop.cli.Commands.Help with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Help\")],bloop.cli.Commands.Help] :+: bloop.cli.Commands.Projects with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Projects\")],bloop.cli.Commands.Projects] :+: bloop.cli.Commands.Run with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Run\")],bloop.cli.Commands.Run] :+: bloop.cli.Commands.Test with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(\"Test\")],bloop.cli.Commands.Test] :+: shapeless.CNil]" -> 1,
  "Array[Short] => Array[String]" -> 1,
  "shapeless.Witness.Aux[Symbol @@ String(\"port\")]" -> 2,
  "caseapp.core.Default[bloop.cli.BspProtocol]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Console]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Configure]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Autocomplete]]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Run]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Clean\")]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"host\")]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Run\")]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Bsp]]" -> 2,
  "scala.collection.generic.CanBuildFrom[List[(bloop.io.AbsolutePath, java.nio.file.attribute.FileTime)],bloop.io.AbsolutePath,List[bloop.io.AbsolutePath]]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Help\")]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"excludeRoot\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Compile\")]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Help]" -> 2,
  "caseapp.core.ArgParser[bloop.cli.completion.Format]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"socket\")]" -> 2,
  "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.completion.Format]]]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Compile\")]]" -> 2,
  "caseapp.core.Default[bloop.cli.completion.Mode]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Clean]" -> 2,
  "Array[String] => ?{def map: ?}" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Projects]" -> 2,
  "(=> Long) => Int" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Compile]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.completion.Mode]]]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Clean\")]]" -> 2,
  "caseapp.core.ArgParser[Option[String]]" -> 2,
  "caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil" -> 2,
  "caseapp.core.ArgParser[List[String]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"mode\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Configure\")]" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil]" -> 2,
  "Option[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Run]" -> 2,
  "caseapp.core.Default[bloop.cli.completion.Format]" -> 2,
  "caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.About]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Clean]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Configure\")]]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Configure]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"only\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Boolean :: List[String] :: List[String] :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.completion.Mode]]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Format] :: shapeless.HNil]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Bsp]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Compile]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Configure]]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"excludeRoot\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "newLines.type => ?{def init: ?}" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"dotGraph\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.BspProtocol]]]" -> 2,
  "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.completion.Format]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"dotGraph\")]" -> 2,
  "Option[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Test]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.About]" -> 2,
  "((Nothing, Nothing)) => Array[Byte]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"isolated\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Help]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil" -> 2,
  "List[bloop.Project] => ?{def ->: ?}" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Format]] :+: None.type :+: shapeless.CNil]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"About\")]]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Help]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"main\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"args\"),List[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Option[String] :: bloop.cli.ReporterKind :: List[String] :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.About]]" -> 2,
  "caseapp.core.ArgParser[bloop.cli.ReporterKind]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"About\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"pipeName\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"only\")]" -> 2,
  "Long => Int" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Autocomplete]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Autocomplete]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Clean]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Console\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Bsp\")]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Run]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Bsp]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Autocomplete\")]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"project\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"incremental\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"reporter\"),bloop.cli.ReporterKind] :: shapeless.labelled.FieldType[Symbol @@ String(\"watch\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: Boolean :: bloop.cli.ReporterKind :: Boolean :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Projects\")]]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"format\")]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"main\")]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.labelled.FieldType[Symbol @@ String(\"mode\"),bloop.cli.completion.Mode] :: shapeless.labelled.FieldType[Symbol @@ String(\"format\"),bloop.cli.completion.Format] :: shapeless.labelled.FieldType[Symbol @@ String(\"command\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"project\"),Option[String]] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.CliOptions :: bloop.cli.completion.Mode :: bloop.cli.completion.Format :: Option[String] :: Option[String] :: shapeless.HNil)" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.BspProtocol]] :+: None.type :+: shapeless.CNil]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Compile]" -> 2,
  "caseapp.core.ArgParser[bloop.cli.BspProtocol]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Test]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Help]]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Test]]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Bsp\")]]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Console]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"protocol\")]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Test\")]]" -> 2,
  "Option[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Help\")]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Format]]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Console]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Projects]]" -> 2,
  "caseapp.core.Parser[bloop.cli.Commands.Bsp]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "caseapp.core.ArgParser[bloop.cli.completion.Mode]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"incremental\")]" -> 2,
  "scala.reflect.ClassTag[bloop.Project]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Mode]]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Test]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Autocomplete\")) :: (Symbol @@ String(\"Bsp\")) :: (Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Autocomplete :+: bloop.cli.Commands.Bsp :+: bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"protocol\"),bloop.cli.BspProtocol] :: shapeless.labelled.FieldType[Symbol @@ String(\"host\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"port\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"socket\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"pipeName\"),Option[String]] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.BspProtocol :: String :: Int :: Option[java.nio.file.Path] :: Option[String] :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.About]" -> 2,
  "shapeless.Strict[caseapp.core.Parser[bloop.cli.Commands.Compile]]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Projects]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Run\")]]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Configure]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Projects]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"command\")]" -> 2,
  "caseapp.util.AnnotationOption[caseapp.CommandName,bloop.cli.Commands.Autocomplete]" -> 2,
  "Array[bloop.io.AbsolutePath] => ?{def map: ?}" -> 2,
  "caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Projects\")]" -> 2,
  "scala.collection.generic.CanBuildFrom[Array[Array[bloop.Project]],Array[bloop.Project],Array[Array[bloop.Project]]]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Console\")]]" -> 2,
  "(=> (Nothing, Nothing)) => Array[Byte]" -> 2,
  "shapeless.Witness.Aux[Symbol @@ String(\"Test\")]" -> 2,
  "shapeless.Witness.Aux[Symbol with shapeless.tag.Tagged[String(\"Autocomplete\")]]" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.BspProtocol]]]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[(Symbol @@ String(\"Clean\")) :: (Symbol @@ String(\"Compile\")) :: (Symbol @@ String(\"Configure\")) :: (Symbol @@ String(\"Console\")) :: (Symbol @@ String(\"Help\")) :: (Symbol @@ String(\"Projects\")) :: (Symbol @@ String(\"Run\")) :: (Symbol @@ String(\"Test\")) :: shapeless.HNil,bloop.cli.Commands.Clean :+: bloop.cli.Commands.Compile :+: bloop.cli.Commands.Configure :+: bloop.cli.Commands.Console :+: bloop.cli.Commands.Help :+: bloop.cli.Commands.Projects :+: bloop.cli.Commands.Run :+: bloop.cli.Commands.Test :+: shapeless.CNil]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.BspProtocol] :: shapeless.HNil]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.completion.Mode]] :+: None.type :+: shapeless.CNil" -> 2,
  "(String, bloop.Project) <:< (String, bloop.Project)" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Console]" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Format]]]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Clean]" -> 2,
  "Some[caseapp.core.Default[bloop.cli.BspProtocol]]" -> 2,
  "shapeless.Annotation[caseapp.CommandName,bloop.cli.Commands.Run]" -> 2,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.completion.Mode] :: shapeless.HNil]" -> 2,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.completion.Mode]]]" -> 2,
  "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.BspProtocol]]" -> 2,
  "shapeless.ops.coproduct.ZipWithKeys[shapeless.HNil,shapeless.CNil]" -> 2,
  "shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Int :: bloop.cli.CliOptions :: shapeless.HNil)" -> 2,
  "((Nothing, Nothing)) => String" -> 3,
  "Array[bloop.io.AbsolutePath] => ?{def toArray: ?}" -> 3,
  "(=> (Nothing, Nothing)) => String" -> 3,
  "Array[String] => ?{def foreach: ?}" -> 3,
  "java.util.Optional[xsbti.compile.CompileAnalysis] => ?{def toOption: ?}" -> 3,
  "scala.collection.generic.CanBuildFrom[List[String],String,List[String]]" -> 3,
  "shapeless.labelled.FieldType[Symbol @@ String(\"cliOptions\"),bloop.cli.CliOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (bloop.cli.CliOptions :: shapeless.HNil)" -> 4,
  "shapeless.Witness.Aux[Symbol @@ String(\"args\")]" -> 4,
  "shapeless.Witness.Aux[Symbol @@ String(\"isolated\")]" -> 4,
  "org.langmeta.jsonrpc.JsonRpcClient" -> 4,
  "Array[xsbti.api.ClassDefinition] => scala.collection.GenTraversableOnce[?]" -> 4,
  "scala.reflect.ClassTag[Array[bloop.Project]]" -> 4,
  "Unit => String" -> 5,
  "Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil" -> 5,
  "None.type :+: shapeless.CNil" -> 5,
  "(=> Unit) => String" -> 5,
  "shapeless.Witness.Aux[Symbol @@ String(\"watch\")]" -> 6,
  "Unit => Int" -> 6,
  "(=> Unit) => Int" -> 6,
  "caseapp.core.ArgParser[Option[java.nio.file.Path]]" -> 7,
  "caseapp.core.ArgParser[java.nio.file.Path]" -> 7,
  "caseapp.core.ArgParser[Boolean]" -> 7,
  "sourcecode.Name" -> 7,
  "Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil" -> 8,
  "Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil" -> 8,
  "caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[List[String]] :: shapeless.HNil]" -> 8,
  "String => ?{def stripMargin: ?}" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[List[String]]]" -> 8,
  "Option[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
  "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.ReporterKind]]" -> 8,
  "caseapp.util.Implicit[Option[caseapp.core.Default[List[String]]]]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[List[String]]]]" -> 8,
  "caseapp.core.Default[bloop.cli.ReporterKind]" -> 8,
  "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.ReporterKind]]]" -> 8,
  "Option[caseapp.core.Default[List[String]]]" -> 8,
  "shapeless.Strict[caseapp.core.ArgParser[List[String]]]" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[Option[String]]]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.ReporterKind]]]" -> 8,
  "caseapp.util.Implicit[Option[caseapp.core.Default[Option[String]]]]" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[Option[String]] :: shapeless.HNil]" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.ReporterKind] :: shapeless.HNil]" -> 8,
  "Option[caseapp.core.Default[Option[String]]]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.ReporterKind]] :+: None.type :+: shapeless.CNil]" -> 8,
  "caseapp.core.Default[Option[String]] :: shapeless.HNil" -> 8,
  "caseapp.core.Default[List[String]]" -> 8,
  "Some[caseapp.core.Default[Option[String]]]" -> 8,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
  "caseapp.core.Default[Option[String]]" -> 8,
  "caseapp.core.Default[List[String]] :: shapeless.HNil" -> 8,
  "Some[caseapp.core.Default[bloop.cli.ReporterKind]]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Option[String]]] :+: None.type :+: shapeless.CNil]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Option[String]]]]" -> 8,
  "shapeless.Witness.Aux[Symbol @@ String(\"reporter\")]" -> 8,
  "Some[caseapp.core.Default[List[String]]]" -> 8,
  "caseapp.util.Implicit[Some[caseapp.core.Default[List[String]]] :+: None.type :+: shapeless.CNil]" -> 8,
  "shapeless.Strict[caseapp.core.ArgParser[Option[String]]]" -> 8,
  "scala.reflect.ClassTag[String]" -> 13,
  "scala.reflect.ClassTag[bloop.io.AbsolutePath]" -> 10,
  "shapeless.HNil" -> 10,
  "shapeless.Witness.Aux[Symbol @@ String(\"project\")]" -> 12,
  "(=> (Nothing, Nothing)) => bloop.cli.Commands.Command" -> 13,
  "((Nothing, Nothing)) => bloop.cli.Commands.Command" -> 13,
  "caseapp.core.ArgParser[java.io.PrintStream]" -> 14,
  "caseapp.core.ArgParser[bloop.cli.CommonOptions.PrettyProperties]" -> 14,
  "caseapp.core.ArgParser[Int]" -> 14,
  "caseapp.core.ArgParser[java.io.InputStream]" -> 14,
  "caseapp.core.DefaultOr[shapeless.HNil,shapeless.HNil]" -> 14,
  "bloop.io.AbsolutePath" -> 14,
  "caseapp.core.ArgParser[String]" -> 18,
  "shapeless.Witness.Aux[Symbol @@ String(\"cliOptions\")]" -> 22,
  "caseapp.core.Parser[bloop.cli.CliOptions]" -> 24,
  "shapeless.labelled.FieldType[Symbol @@ String(\"configDir\"),Option[java.nio.file.Path]] :: shapeless.labelled.FieldType[Symbol @@ String(\"version\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"verbose\"),Boolean] :: shapeless.labelled.FieldType[Symbol @@ String(\"common\"),bloop.cli.CommonOptions] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (Option[java.nio.file.Path] :: Boolean :: Boolean :: bloop.cli.CommonOptions :: shapeless.HNil)" -> 47,
  "shapeless.Witness.Aux[Symbol @@ String(\"configDir\")]" -> 47,
  "shapeless.Witness.Aux[Symbol @@ String(\"version\")]" -> 47,
  "shapeless.Witness.Aux[Symbol @@ String(\"verbose\")]" -> 47,
  "caseapp.core.Parser[bloop.cli.CommonOptions]" -> 47,
  "shapeless.Witness.Aux[Symbol @@ String(\"common\")]" -> 47,
  "Some[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 49,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Option[java.nio.file.Path]]] :+: None.type :+: shapeless.CNil]" -> 49,
  "caseapp.util.Implicit[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 49,
  "caseapp.core.Default[Option[java.nio.file.Path]]" -> 49,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Option[java.nio.file.Path]]]]" -> 49,
  "shapeless.Strict[caseapp.core.ArgParser[Option[java.nio.file.Path]]]" -> 49,
  "caseapp.util.Implicit[Option[caseapp.core.Default[Option[java.nio.file.Path]]]]" -> 49,
  "Option[caseapp.core.Default[Option[java.nio.file.Path]]]" -> 49,
  "caseapp.util.Implicit[caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil]" -> 49,
  "caseapp.core.Default[Option[java.nio.file.Path]] :: shapeless.HNil" -> 49,
  "shapeless.Witness.Aux[Symbol @@ String(\"out\")]" -> 94,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"env\")]" -> 94,
  "shapeless.Strict[caseapp.core.DefaultOr[shapeless.HNil,shapeless.HNil]]" -> 94,
  "Option[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]" -> 94,
  "Option[caseapp.core.Default[java.io.InputStream]]" -> 94,
  "caseapp.util.Implicit[Some[caseapp.core.Default[java.io.InputStream]]]" -> 94,
  "shapeless.labelled.FieldType[Symbol @@ String(\"workingDirectory\"),String] :: shapeless.labelled.FieldType[Symbol @@ String(\"out\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"in\"),java.io.InputStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"err\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngout\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"ngerr\"),java.io.PrintStream] :: shapeless.labelled.FieldType[Symbol @@ String(\"env\"),bloop.cli.CommonOptions.PrettyProperties] :: shapeless.labelled.FieldType[Symbol @@ String(\"threads\"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out <:< (String :: java.io.PrintStream :: java.io.InputStream :: java.io.PrintStream :: java.io.PrintStream :: java.io.PrintStream :: bloop.cli.CommonOptions.PrettyProperties :: Int :: shapeless.HNil)" -> 94,
  "caseapp.util.Implicit[Option[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]]" -> 94,
  "caseapp.core.Default[java.io.InputStream]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"err\")]" -> 94,
  "Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]" -> 94,
  "shapeless.Strict[caseapp.core.ArgParser[bloop.cli.CommonOptions.PrettyProperties]]" -> 94,
  "caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties] :: shapeless.HNil" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"in\")]" -> 94,
  "caseapp.util.Implicit[Some[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]] :+: None.type :+: shapeless.CNil]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"ngout\")]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"workingDirectory\")]" -> 94,
  "caseapp.util.Implicit[Some[caseapp.core.Default[java.io.InputStream]] :+: None.type :+: shapeless.CNil]" -> 94,
  "caseapp.util.Implicit[caseapp.core.Default[java.io.InputStream] :: shapeless.HNil]" -> 94,
  "caseapp.core.Default[java.io.InputStream] :: shapeless.HNil" -> 94,
  "shapeless.Strict[caseapp.core.ArgParser[java.io.InputStream]]" -> 94,
  "caseapp.util.Implicit[Option[caseapp.core.Default[java.io.InputStream]]]" -> 94,
  "Some[caseapp.core.Default[java.io.InputStream]]" -> 94,
  "Some[caseapp.core.Default[java.io.InputStream]] :+: None.type :+: shapeless.CNil" -> 94,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties] :: shapeless.HNil]" -> 94,
  "caseapp.util.Implicit[caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]]" -> 94,
  "caseapp.core.Default[bloop.cli.CommonOptions.PrettyProperties]" -> 94,
  "shapeless.Default[bloop.cli.CommonOptions.PrettyProperties]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"ngerr\")]" -> 94,
  "caseapp.util.Implicit[caseapp.core.Default[java.io.InputStream]]" -> 94,
  "shapeless.Witness.Aux[Symbol @@ String(\"threads\")]" -> 96,
  "caseapp.core.HListParser[shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil,shapeless.HNil]" -> 97,
  "caseapp.util.Implicit[caseapp.core.Default[Int] :: shapeless.HNil]" -> 98,
  "Option[caseapp.core.Default[Int]]" -> 98,
  "caseapp.util.Implicit[Option[caseapp.core.Default[Int]]]" -> 98,
  "shapeless.Strict[caseapp.core.ArgParser[Int]]" -> 98,
  "Some[caseapp.core.Default[Int]]" -> 98,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Int]]]" -> 98,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Int]] :+: None.type :+: shapeless.CNil]" -> 98,
  "caseapp.util.Implicit[caseapp.core.Default[Int]]" -> 98,
  "caseapp.core.Default[Int]" -> 98,
  "caseapp.core.Default[Int] :: shapeless.HNil" -> 98,
  "Some[caseapp.core.Default[Int]] :+: None.type :+: shapeless.CNil" -> 98,
  "caseapp.core.Default[String]" -> 104,
  "caseapp.util.Implicit[Some[caseapp.core.Default[String]]]" -> 104,
  "Some[caseapp.core.Default[String]] :+: None.type :+: shapeless.CNil" -> 104,
  "caseapp.util.Implicit[Option[caseapp.core.Default[String]]]" -> 104,
  "Some[caseapp.core.Default[String]]" -> 104,
  "Option[caseapp.core.Default[String]]" -> 104,
  "caseapp.util.Implicit[caseapp.core.Default[String]]" -> 104,
  "caseapp.util.Implicit[Some[caseapp.core.Default[String]] :+: None.type :+: shapeless.CNil]" -> 104,
  "shapeless.Strict[caseapp.core.ArgParser[String]]" -> 104,
  "caseapp.util.Implicit[caseapp.core.Default[String] :: shapeless.HNil]" -> 104,
  "caseapp.core.Default[String] :: shapeless.HNil" -> 104,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Boolean]] :+: None.type :+: shapeless.CNil]" -> 110,
  "shapeless.Strict[caseapp.core.ArgParser[Boolean]]" -> 110,
  "Some[caseapp.core.Default[Boolean]]" -> 110,
  "Option[caseapp.core.Default[Boolean]]" -> 110,
  "caseapp.util.Implicit[Some[caseapp.core.Default[Boolean]]]" -> 110,
  "caseapp.util.Implicit[caseapp.core.Default[Boolean]]" -> 110,
  "caseapp.util.Implicit[Option[caseapp.core.Default[Boolean]]]" -> 110,
  "caseapp.util.Implicit[caseapp.core.Default[Boolean] :: shapeless.HNil]" -> 110,
  "Some[caseapp.core.Default[Boolean]] :+: None.type :+: shapeless.CNil" -> 110,
  "caseapp.core.Default[Boolean]" -> 110,
  "caseapp.core.Default[Boolean] :: shapeless.HNil" -> 110,
  "caseapp.core.Default[java.io.PrintStream] :: shapeless.HNil" -> 376,
  "Some[caseapp.core.Default[java.io.PrintStream]] :+: None.type :+: shapeless.CNil" -> 376,
  "Some[caseapp.core.Default[java.io.PrintStream]]" -> 376,
  "Option[caseapp.core.Default[java.io.PrintStream]]" -> 376,
  "caseapp.util.Implicit[Option[caseapp.core.Default[java.io.PrintStream]]]" -> 376,
  "caseapp.core.Default[java.io.PrintStream]" -> 376,
  "caseapp.util.Implicit[caseapp.core.Default[java.io.PrintStream] :: shapeless.HNil]" -> 376,
  "caseapp.util.Implicit[Some[caseapp.core.Default[java.io.PrintStream]]]" -> 376,
  "caseapp.util.Implicit[Some[caseapp.core.Default[java.io.PrintStream]] :+: None.type :+: shapeless.CNil]" -> 376,
  "shapeless.Strict[caseapp.core.ArgParser[java.io.PrintStream]]" -> 376,
  "caseapp.util.Implicit[caseapp.core.Default[java.io.PrintStream]]" -> 376,
  "caseapp.util.Implicit[None.type :+: shapeless.CNil]" -> 804,
  "caseapp.util.Implicit[None.type]" -> 804,
  "None.type" -> 804,
  "caseapp.util.Implicit[shapeless.HNil]" -> 955
)
*** Cumulative timers for phases
#total compile time           : 1 spans, ()49395.481ms
  parser                      : 1 spans, ()57.037ms (0.1%)
  namer                       : 1 spans, ()23.431ms (0.0%)
  packageobjects              : 1 spans, ()0.147ms (0.0%)
  typer                       : 1 spans, ()43146.198ms (87.3%)
  patmat                      : 1 spans, ()863.859ms (1.7%)
  superaccessors              : 1 spans, ()24.857ms (0.1%)
  extmethods                  : 1 spans, ()1.984ms (0.0%)
  pickler                     : 1 spans, ()6.355ms (0.0%)
  xsbt-api                    : 1 spans, ()141.447ms (0.3%)
  xsbt-dependency             : 1 spans, ()86.191ms (0.2%)
  refchecks                   : 1 spans, ()624.535ms (1.3%)
  uncurry                     : 1 spans, ()416.095ms (0.8%)
  fields                      : 1 spans, ()427.313ms (0.9%)
  tailcalls                   : 1 spans, ()30.101ms (0.1%)
  specialize                  : 1 spans, ()173.376ms (0.4%)
  explicitouter               : 1 spans, ()118.849ms (0.2%)
  erasure                     : 1 spans, ()581.042ms (1.2%)
  posterasure                 : 1 spans, ()70.589ms (0.1%)
  lambdalift                  : 1 spans, ()119.6ms (0.2%)
  constructors                : 1 spans, ()31.594ms (0.1%)
  flatten                     : 1 spans, ()38.054ms (0.1%)
  mixin                       : 1 spans, ()50.854ms (0.1%)
  cleanup                     : 1 spans, ()53.663ms (0.1%)
  delambdafy                  : 1 spans, ()76.023ms (0.2%)
  jvm                         : 1 spans, ()955.239ms (1.9%)
  scalacenter-profiling       : 1 spans, ()1267.781ms (2.6%)
  xsbt-analyzer               : 1 spans, ()6.042ms (0.0%)
Done compiling.
